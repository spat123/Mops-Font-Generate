"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["components_WaterfallMode_jsx"],{

/***/ "./components/WaterfallMode.jsx":
/*!**************************************!*\
  !*** ./components/WaterfallMode.jsx ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_virtuoso__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-virtuoso */ \"./node_modules/react-virtuoso/dist/index.mjs\");\n/* harmony import */ var _contexts_SettingsContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../contexts/SettingsContext */ \"./contexts/SettingsContext.js\");\n/* harmony import */ var _contexts_FontContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../contexts/FontContext */ \"./contexts/FontContext.js\");\n/* harmony import */ var _EditableText__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./EditableText */ \"./components/EditableText.jsx\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n// Стандартные размеры для режима Waterfall - НАЧИНАЕМ СО 180px\nconst waterfallSizes = [\n    180,\n    120,\n    96,\n    72,\n    60,\n    48,\n    36,\n    30,\n    24,\n    18,\n    14,\n    12,\n    10,\n    8\n];\nconst WaterfallMode = ()=>{\n    _s();\n    // Получаем все нужные настройки, включая textColor\n    const { text, backgroundColor, textAlignment, lineHeight, textCase, textColor } = (0,_contexts_SettingsContext__WEBPACK_IMPORTED_MODULE_2__.useSettings)();\n    const { selectedFont, getFontFamily, getVariationSettings } = (0,_contexts_FontContext__WEBPACK_IMPORTED_MODULE_3__.useFontContext)();\n    // const { selectedFont } = useFontManager(); // This seems unused now\n    // console.log(\"WaterfallMode rendering with text:\", text, \"Settings:\", settings); // Удаляем закомментированный лог\n    // Стили для текста, зависящие от выбранного шрифта И НАСТРОЕК\n    const baseTextStyle = {\n        fontFamily: getFontFamily(),\n        fontVariationSettings: getVariationSettings(),\n        textAlign: textAlignment,\n        textTransform: textCase === \"none\" ? \"none\" : textCase,\n        color: textColor\n    };\n    // Оборачиваем renderItem в useCallback\n    const renderItem = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((index, size)=>{\n        const uniqueKey = \"\".concat((selectedFont === null || selectedFont === void 0 ? void 0 : selectedFont.id) || \"no-font\", \"-\").concat(size, \"-\").concat(index); // Уникальный ключ\n        // Собираем itemStyle точно как в оригинале\n        const itemStyle = {\n            ...baseTextStyle,\n            fontSize: \"\".concat(size, \"px\"),\n            lineHeight: size > 48 ? 1.0 : lineHeight,\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden\",\n            width: \"100%\",\n            textAlign: textAlignment\n        };\n        // Возвращаем ТОЧНУЮ JSX-структуру из оригинального кода\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"border-t border-blue-100 pt-4 pb-4\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex items-center\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"text-xs text-gray-500 pl-8 font-medium shrink-0 text-right\",\n                        children: [\n                            size,\n                            \"px\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/igormocalov/Desktop/Font/components/WaterfallMode.jsx\",\n                        lineNumber: 55,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex-1 overflow-hidden\",\n                        children: [\n                            \" \",\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_EditableText__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                style: itemStyle,\n                                isStyles: false,\n                                syncId: \"waterfall-\".concat(size),\n                                viewMode: \"waterfall\",\n                                isWaterfall: true\n                            }, void 0, false, {\n                                fileName: \"/Users/igormocalov/Desktop/Font/components/WaterfallMode.jsx\",\n                                lineNumber: 57,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/igormocalov/Desktop/Font/components/WaterfallMode.jsx\",\n                        lineNumber: 56,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/igormocalov/Desktop/Font/components/WaterfallMode.jsx\",\n                lineNumber: 54,\n                columnNumber: 9\n            }, undefined)\n        }, uniqueKey, false, {\n            fileName: \"/Users/igormocalov/Desktop/Font/components/WaterfallMode.jsx\",\n            lineNumber: 53,\n            columnNumber: 7\n        }, undefined);\n    }, [\n        // Добавляем все зависимости, используемые внутри renderItem\n        selectedFont,\n        baseTextStyle,\n        lineHeight,\n        textAlignment\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"font-preview-area pt-1.5 overflow-y-auto w-full h-full\",\n        style: {\n            backgroundColor: backgroundColor\n        },\n        children: selectedFont ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"pb-2\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_virtuoso__WEBPACK_IMPORTED_MODULE_5__.Virtuoso, {\n                style: {\n                    height: \"calc(100vh - 100px)\"\n                },\n                data: waterfallSizes,\n                itemContent: renderItem,\n                overscan: 200\n            }, void 0, false, {\n                fileName: \"/Users/igormocalov/Desktop/Font/components/WaterfallMode.jsx\",\n                lineNumber: 86,\n                columnNumber: 11\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/Users/igormocalov/Desktop/Font/components/WaterfallMode.jsx\",\n            lineNumber: 85,\n            columnNumber: 9\n        }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex items-center justify-center h-full text-gray-500\",\n            children: \"Выберите или загрузите шрифт для просмотра в режиме Waterfall.\"\n        }, void 0, false, {\n            fileName: \"/Users/igormocalov/Desktop/Font/components/WaterfallMode.jsx\",\n            lineNumber: 94,\n            columnNumber: 9\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/igormocalov/Desktop/Font/components/WaterfallMode.jsx\",\n        lineNumber: 80,\n        columnNumber: 5\n    }, undefined);\n};\n_s(WaterfallMode, \"VexfIRLYQZWJ76QpvD5l6Veng/8=\", false, function() {\n    return [\n        _contexts_SettingsContext__WEBPACK_IMPORTED_MODULE_2__.useSettings,\n        _contexts_FontContext__WEBPACK_IMPORTED_MODULE_3__.useFontContext\n    ];\n});\n_c = WaterfallMode;\n/* harmony default export */ __webpack_exports__[\"default\"] = (WaterfallMode);\nvar _c;\n$RefreshReg$(_c, \"WaterfallMode\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/WaterfallMode.jsx\n"));

/***/ }),

/***/ "./node_modules/react-virtuoso/dist/index.mjs":
/*!****************************************************!*\
  !*** ./node_modules/react-virtuoso/dist/index.mjs ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GroupedVirtuoso: function() { return /* binding */ jr; },\n/* harmony export */   LogLevel: function() { return /* binding */ ht; },\n/* harmony export */   TableVirtuoso: function() { return /* binding */ qr; },\n/* harmony export */   Virtuoso: function() { return /* binding */ Kr; },\n/* harmony export */   VirtuosoGrid: function() { return /* binding */ Yr; },\n/* harmony export */   VirtuosoGridMockContext: function() { return /* binding */ Yn; },\n/* harmony export */   VirtuosoMockContext: function() { return /* binding */ Re; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n\n\n\nconst we = 0, zt = 1, qt = 2, En = 4;\nfunction ln(t) {\n  return () => t;\n}\nfunction co(t) {\n  t();\n}\nfunction ne(t, e) {\n  return (n) => t(e(n));\n}\nfunction cn(t, e) {\n  return () => t(e);\n}\nfunction kn(t, e) {\n  return (n) => t(e, n);\n}\nfunction Me(t) {\n  return t !== void 0;\n}\nfunction uo(...t) {\n  return () => {\n    t.map(co);\n  };\n}\nfunction Yt() {\n}\nfunction ye(t, e) {\n  return e(t), t;\n}\nfunction ao(t, e) {\n  return e(t);\n}\nfunction X(...t) {\n  return t;\n}\nfunction K(t, e) {\n  return t(zt, e);\n}\nfunction W(t, e) {\n  t(we, e);\n}\nfunction We(t) {\n  t(qt);\n}\nfunction lt(t) {\n  return t(En);\n}\nfunction F(t, e) {\n  return K(t, kn(e, we));\n}\nfunction Rt(t, e) {\n  const n = t(zt, (o) => {\n    n(), e(o);\n  });\n  return n;\n}\nfunction un(t) {\n  let e, n;\n  return (o) => (r) => {\n    e = r, n && clearTimeout(n), n = setTimeout(() => {\n      o(e);\n    }, t);\n  };\n}\nfunction Bn(t, e) {\n  return t === e;\n}\nfunction Y(t = Bn) {\n  let e;\n  return (n) => (o) => {\n    t(e, o) || (e = o, n(o));\n  };\n}\nfunction P(t) {\n  return (e) => (n) => {\n    t(n) && e(n);\n  };\n}\nfunction E(t) {\n  return (e) => ne(e, t);\n}\nfunction vt(t) {\n  return (e) => () => {\n    e(t);\n  };\n}\nfunction x(t, ...e) {\n  const n = fo(...e);\n  return (o, r) => {\n    switch (o) {\n      case qt:\n        We(t);\n        return;\n      case zt:\n        return K(t, n(r));\n    }\n  };\n}\nfunction bt(t, e) {\n  return (n) => (o) => {\n    n(e = t(e, o));\n  };\n}\nfunction jt(t) {\n  return (e) => (n) => {\n    t > 0 ? t-- : e(n);\n  };\n}\nfunction Lt(t) {\n  let e = null, n;\n  return (o) => (r) => {\n    e = r, !n && (n = setTimeout(() => {\n      n = void 0, o(e);\n    }, t));\n  };\n}\nfunction G(...t) {\n  const e = new Array(t.length);\n  let n = 0, o = null;\n  const r = Math.pow(2, t.length) - 1;\n  return t.forEach((s, i) => {\n    const l = Math.pow(2, i);\n    K(s, (c) => {\n      const u = n;\n      n = n | l, e[i] = c, u !== r && n === r && o && (o(), o = null);\n    });\n  }), (s) => (i) => {\n    const l = () => {\n      s([i].concat(e));\n    };\n    n === r ? l() : o = l;\n  };\n}\nfunction fo(...t) {\n  return (e) => t.reduceRight(ao, e);\n}\nfunction mo(t) {\n  let e, n;\n  const o = () => e == null ? void 0 : e();\n  return function(r, s) {\n    switch (r) {\n      case zt:\n        return s ? n === s ? void 0 : (o(), n = s, e = K(t, s), e) : (o(), Yt);\n      case qt:\n        o(), n = null;\n        return;\n    }\n  };\n}\nfunction y(t) {\n  let e = t;\n  const n = $();\n  return (o, r) => {\n    switch (o) {\n      case we:\n        e = r;\n        break;\n      case zt: {\n        r(e);\n        break;\n      }\n      case En:\n        return e;\n    }\n    return n(o, r);\n  };\n}\nfunction ct(t, e) {\n  return ye(y(e), (n) => F(t, n));\n}\nfunction $() {\n  const t = [];\n  return (e, n) => {\n    switch (e) {\n      case we:\n        t.slice().forEach((o) => {\n          o(n);\n        });\n        return;\n      case qt:\n        t.splice(0, t.length);\n        return;\n      case zt:\n        return t.push(n), () => {\n          const o = t.indexOf(n);\n          o > -1 && t.splice(o, 1);\n        };\n    }\n  };\n}\nfunction pt(t) {\n  return ye($(), (e) => F(t, e));\n}\nfunction U(t, e = [], { singleton: n } = { singleton: !0 }) {\n  return {\n    constructor: t,\n    dependencies: e,\n    id: po(),\n    singleton: n\n  };\n}\nconst po = () => Symbol();\nfunction ho(t) {\n  const e = /* @__PURE__ */ new Map(), n = ({ constructor: o, dependencies: r, id: s, singleton: i }) => {\n    if (i && e.has(s))\n      return e.get(s);\n    const l = o(r.map((c) => n(c)));\n    return i && e.set(s, l), l;\n  };\n  return n(t);\n}\nfunction rt(...t) {\n  const e = $(), n = new Array(t.length);\n  let o = 0;\n  const r = Math.pow(2, t.length) - 1;\n  return t.forEach((s, i) => {\n    const l = Math.pow(2, i);\n    K(s, (c) => {\n      n[i] = c, o = o | l, o === r && W(e, n);\n    });\n  }), function(s, i) {\n    switch (s) {\n      case qt: {\n        We(e);\n        return;\n      }\n      case zt:\n        return o === r && i(n), K(e, i);\n    }\n  };\n}\nfunction A(t, e = Bn) {\n  return x(t, Y(e));\n}\nfunction an(...t) {\n  return function(e, n) {\n    switch (e) {\n      case qt:\n        return;\n      case zt:\n        return uo(...t.map((o) => K(o, n)));\n    }\n  };\n}\nvar ht = /* @__PURE__ */ ((t) => (t[t.DEBUG = 0] = \"DEBUG\", t[t.INFO = 1] = \"INFO\", t[t.WARN = 2] = \"WARN\", t[t.ERROR = 3] = \"ERROR\", t))(ht || {});\nconst go = {\n  0: \"debug\",\n  3: \"error\",\n  1: \"log\",\n  2: \"warn\"\n}, Io = () => typeof globalThis > \"u\" ? window : globalThis, Vt = U(\n  () => {\n    const t = y(\n      3\n      /* ERROR */\n    );\n    return {\n      log: y((n, o, r = 1) => {\n        var i;\n        const s = (i = Io().VIRTUOSO_LOG_LEVEL) != null ? i : lt(t);\n        r >= s && console[go[r]](\n          \"%creact-virtuoso: %c%s %o\",\n          \"color: #0253b3; font-weight: bold\",\n          \"color: initial\",\n          n,\n          o\n        );\n      }),\n      logLevel: t\n    };\n  },\n  [],\n  { singleton: !0 }\n);\nfunction Ht(t, e, n) {\n  return _e(t, e, n).callbackRef;\n}\nfunction _e(t, e, n) {\n  const o = react__WEBPACK_IMPORTED_MODULE_1__.useRef(null);\n  let r = (s) => {\n  };\n  if (typeof ResizeObserver < \"u\") {\n    const s = react__WEBPACK_IMPORTED_MODULE_1__.useMemo(() => new ResizeObserver((i) => {\n      const l = () => {\n        const c = i[0].target;\n        c.offsetParent !== null && t(c);\n      };\n      n ? l() : requestAnimationFrame(l);\n    }), [t]);\n    r = (i) => {\n      i && e ? (s.observe(i), o.current = i) : (o.current && s.unobserve(o.current), o.current = null);\n    };\n  }\n  return { callbackRef: r, ref: o };\n}\nfunction On(t, e, n, o, r, s, i, l, c) {\n  const u = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(\n    (f) => {\n      const S = So(f.children, e, l ? \"offsetWidth\" : \"offsetHeight\", r);\n      let p = f.parentElement;\n      for (; !p.dataset.virtuosoScroller; )\n        p = p.parentElement;\n      const m = p.lastElementChild.dataset.viewportType === \"window\";\n      let w;\n      m && (w = p.ownerDocument.defaultView);\n      const I = i ? l ? i.scrollLeft : i.scrollTop : m ? l ? w.scrollX || w.document.documentElement.scrollLeft : w.scrollY || w.document.documentElement.scrollTop : l ? p.scrollLeft : p.scrollTop, C = i ? l ? i.scrollWidth : i.scrollHeight : m ? l ? w.document.documentElement.scrollWidth : w.document.documentElement.scrollHeight : l ? p.scrollWidth : p.scrollHeight, g = i ? l ? i.offsetWidth : i.offsetHeight : m ? l ? w.innerWidth : w.innerHeight : l ? p.offsetWidth : p.offsetHeight;\n      o({\n        scrollHeight: C,\n        scrollTop: Math.max(I, 0),\n        viewportHeight: g\n      }), s == null || s(\n        l ? dn(\"column-gap\", getComputedStyle(f).columnGap, r) : dn(\"row-gap\", getComputedStyle(f).rowGap, r)\n      ), S !== null && t(S);\n    },\n    [t, e, r, s, i, o]\n  );\n  return _e(u, n, c);\n}\nfunction So(t, e, n, o) {\n  const r = t.length;\n  if (r === 0)\n    return null;\n  const s = [];\n  for (let i = 0; i < r; i++) {\n    const l = t.item(i);\n    if (l.dataset.index === void 0)\n      continue;\n    const c = parseInt(l.dataset.index), u = parseFloat(l.dataset.knownSize), f = e(l, n);\n    if (f === 0 && o(\"Zero-sized element, this should not happen\", { child: l }, ht.ERROR), f === u)\n      continue;\n    const S = s[s.length - 1];\n    s.length === 0 || S.size !== f || S.endIndex !== c - 1 ? s.push({ endIndex: c, size: f, startIndex: c }) : s[s.length - 1].endIndex++;\n  }\n  return s;\n}\nfunction dn(t, e, n) {\n  return e !== \"normal\" && !(e != null && e.endsWith(\"px\")) && n(`${t} was not resolved to pixel value correctly`, e, ht.WARN), e === \"normal\" ? 0 : parseInt(e != null ? e : \"0\", 10);\n}\nfunction Ge(t, e, n) {\n  const o = react__WEBPACK_IMPORTED_MODULE_1__.useRef(null), r = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(\n    (c) => {\n      if (!(c != null && c.offsetParent))\n        return;\n      const u = c.getBoundingClientRect(), f = u.width;\n      let S, p;\n      if (e) {\n        const m = e.getBoundingClientRect(), w = u.top - m.top;\n        p = m.height - Math.max(0, w), S = w + e.scrollTop;\n      } else {\n        const m = i.current.ownerDocument.defaultView;\n        p = m.innerHeight - Math.max(0, u.top), S = u.top + m.scrollY;\n      }\n      o.current = {\n        offsetTop: S,\n        visibleHeight: p,\n        visibleWidth: f\n      }, t(o.current);\n    },\n    [t, e]\n  ), { callbackRef: s, ref: i } = _e(r, !0, n), l = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(() => {\n    r(i.current);\n  }, [r, i]);\n  return react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n    var c;\n    if (e) {\n      e.addEventListener(\"scroll\", l);\n      const u = new ResizeObserver(() => {\n        requestAnimationFrame(l);\n      });\n      return u.observe(e), () => {\n        e.removeEventListener(\"scroll\", l), u.unobserve(e);\n      };\n    } else {\n      const u = (c = i.current) == null ? void 0 : c.ownerDocument.defaultView;\n      return u == null || u.addEventListener(\"scroll\", l), u == null || u.addEventListener(\"resize\", l), () => {\n        u == null || u.removeEventListener(\"scroll\", l), u == null || u.removeEventListener(\"resize\", l);\n      };\n    }\n  }, [l, e]), s;\n}\nconst at = U(\n  () => {\n    const t = $(), e = $(), n = y(0), o = $(), r = y(0), s = $(), i = $(), l = y(0), c = y(0), u = y(0), f = y(0), S = $(), p = $(), m = y(!1), w = y(!1), I = y(!1);\n    return F(\n      x(\n        t,\n        E(({ scrollTop: C }) => C)\n      ),\n      e\n    ), F(\n      x(\n        t,\n        E(({ scrollHeight: C }) => C)\n      ),\n      i\n    ), F(e, r), {\n      deviation: n,\n      fixedFooterHeight: u,\n      fixedHeaderHeight: c,\n      footerHeight: f,\n      headerHeight: l,\n      horizontalDirection: w,\n      scrollBy: p,\n      // input\n      scrollContainerState: t,\n      scrollHeight: i,\n      scrollingInProgress: m,\n      // signals\n      scrollTo: S,\n      scrollTop: e,\n      skipAnimationFrameInResizeObserver: I,\n      smoothScrollTargetReached: o,\n      // state\n      statefulScrollTop: r,\n      viewportHeight: s\n    };\n  },\n  [],\n  { singleton: !0 }\n), oe = { lvl: 0 };\nfunction Fn(t, e) {\n  const n = t.length;\n  if (n === 0)\n    return [];\n  let { index: o, value: r } = e(t[0]);\n  const s = [];\n  for (let i = 1; i < n; i++) {\n    const { index: l, value: c } = e(t[i]);\n    s.push({ end: l - 1, start: o, value: r }), o = l, r = c;\n  }\n  return s.push({ end: 1 / 0, start: o, value: r }), s;\n}\nfunction j(t) {\n  return t === oe;\n}\nfunction re(t, e) {\n  if (!j(t))\n    return e === t.k ? t.v : e < t.k ? re(t.l, e) : re(t.r, e);\n}\nfunction Ct(t, e, n = \"k\") {\n  if (j(t))\n    return [-1 / 0, void 0];\n  if (Number(t[n]) === e)\n    return [t.k, t.v];\n  if (Number(t[n]) < e) {\n    const o = Ct(t.r, e, n);\n    return o[0] === -1 / 0 ? [t.k, t.v] : o;\n  }\n  return Ct(t.l, e, n);\n}\nfunction mt(t, e, n) {\n  return j(t) ? Vn(e, n, 1) : e === t.k ? ot(t, { k: e, v: n }) : e < t.k ? fn(ot(t, { l: mt(t.l, e, n) })) : fn(ot(t, { r: mt(t.r, e, n) }));\n}\nfunction Ut() {\n  return oe;\n}\nfunction ve(t, e, n) {\n  if (j(t))\n    return [];\n  const o = Ct(t, e)[0];\n  return xo(ze(t, o, n));\n}\nfunction Le(t, e) {\n  if (j(t)) return oe;\n  const { k: n, l: o, r } = t;\n  if (e === n) {\n    if (j(o))\n      return r;\n    if (j(r))\n      return o;\n    {\n      const [s, i] = zn(o);\n      return ge(ot(t, { k: s, l: Ln(o), v: i }));\n    }\n  } else return e < n ? ge(ot(t, { l: Le(o, e) })) : ge(ot(t, { r: Le(r, e) }));\n}\nfunction _t(t) {\n  return j(t) ? [] : [..._t(t.l), { k: t.k, v: t.v }, ..._t(t.r)];\n}\nfunction ze(t, e, n) {\n  if (j(t))\n    return [];\n  const { k: o, l: r, r: s, v: i } = t;\n  let l = [];\n  return o > e && (l = l.concat(ze(r, e, n))), o >= e && o <= n && l.push({ k: o, v: i }), o <= n && (l = l.concat(ze(s, e, n))), l;\n}\nfunction ge(t) {\n  const { l: e, lvl: n, r: o } = t;\n  if (o.lvl >= n - 1 && e.lvl >= n - 1)\n    return t;\n  if (n > o.lvl + 1) {\n    if (Ee(e))\n      return Pn(ot(t, { lvl: n - 1 }));\n    if (!j(e) && !j(e.r))\n      return ot(e.r, {\n        l: ot(e, { r: e.r.l }),\n        lvl: n,\n        r: ot(t, {\n          l: e.r.r,\n          lvl: n - 1\n        })\n      });\n    throw new Error(\"Unexpected empty nodes\");\n  } else {\n    if (Ee(t))\n      return Ve(ot(t, { lvl: n - 1 }));\n    if (!j(o) && !j(o.l)) {\n      const r = o.l, s = Ee(r) ? o.lvl - 1 : o.lvl;\n      return ot(r, {\n        l: ot(t, {\n          lvl: n - 1,\n          r: r.l\n        }),\n        lvl: r.lvl + 1,\n        r: Ve(ot(o, { l: r.r, lvl: s }))\n      });\n    } else\n      throw new Error(\"Unexpected empty nodes\");\n  }\n}\nfunction ot(t, e) {\n  return Vn(\n    e.k !== void 0 ? e.k : t.k,\n    e.v !== void 0 ? e.v : t.v,\n    e.lvl !== void 0 ? e.lvl : t.lvl,\n    e.l !== void 0 ? e.l : t.l,\n    e.r !== void 0 ? e.r : t.r\n  );\n}\nfunction Ln(t) {\n  return j(t.r) ? t.l : ge(ot(t, { r: Ln(t.r) }));\n}\nfunction Ee(t) {\n  return j(t) || t.lvl > t.r.lvl;\n}\nfunction zn(t) {\n  return j(t.r) ? [t.k, t.v] : zn(t.r);\n}\nfunction Vn(t, e, n, o = oe, r = oe) {\n  return { k: t, l: o, lvl: n, r, v: e };\n}\nfunction fn(t) {\n  return Ve(Pn(t));\n}\nfunction Pn(t) {\n  const { l: e } = t;\n  return !j(e) && e.lvl === t.lvl ? ot(e, { r: ot(t, { l: e.r }) }) : t;\n}\nfunction Ve(t) {\n  const { lvl: e, r: n } = t;\n  return !j(n) && !j(n.r) && n.lvl === e && n.r.lvl === e ? ot(n, { l: ot(t, { r: n.l }), lvl: e + 1 }) : t;\n}\nfunction xo(t) {\n  return Fn(t, ({ k: e, v: n }) => ({ index: e, value: n }));\n}\nfunction An(t, e) {\n  return !!(t && t.startIndex === e.startIndex && t.endIndex === e.endIndex);\n}\nfunction se(t, e) {\n  return !!(t && t[0] === e[0] && t[1] === e[1]);\n}\nconst Ne = U(\n  () => ({ recalcInProgress: y(!1) }),\n  [],\n  { singleton: !0 }\n);\nfunction Mn(t, e, n) {\n  return t[Se(t, e, n)];\n}\nfunction Se(t, e, n, o = 0) {\n  let r = t.length - 1;\n  for (; o <= r; ) {\n    const s = Math.floor((o + r) / 2), i = t[s], l = n(i, e);\n    if (l === 0)\n      return s;\n    if (l === -1) {\n      if (r - o < 2)\n        return s - 1;\n      r = s - 1;\n    } else {\n      if (r === o)\n        return s;\n      o = s + 1;\n    }\n  }\n  throw new Error(`Failed binary finding record in array - ${t.join(\",\")}, searched for ${e}`);\n}\nfunction To(t, e, n, o) {\n  const r = Se(t, e, o), s = Se(t, n, o, r);\n  return t.slice(r, s + 1);\n}\nfunction wt(t, e) {\n  return Math.round(t.getBoundingClientRect()[e]);\n}\nfunction be(t) {\n  return !j(t.groupOffsetTree);\n}\nfunction De({ index: t }, e) {\n  return e === t ? 0 : e < t ? -1 : 1;\n}\nfunction Co() {\n  return {\n    groupIndices: [],\n    groupOffsetTree: Ut(),\n    lastIndex: 0,\n    lastOffset: 0,\n    lastSize: 0,\n    offsetTree: [],\n    sizeTree: Ut()\n  };\n}\nfunction wo(t, e) {\n  let n = j(t) ? 0 : 1 / 0;\n  for (const o of e) {\n    const { endIndex: r, size: s, startIndex: i } = o;\n    if (n = Math.min(n, i), j(t)) {\n      t = mt(t, 0, s);\n      continue;\n    }\n    const l = ve(t, i - 1, r + 1);\n    if (l.some(ko(o)))\n      continue;\n    let c = !1, u = !1;\n    for (const { end: f, start: S, value: p } of l)\n      c ? (r >= S || s === p) && (t = Le(t, S)) : (u = p !== s, c = !0), f > r && r >= S && p !== s && (t = mt(t, r + 1, p));\n    u && (t = mt(t, i, s));\n  }\n  return [t, n];\n}\nfunction yo(t) {\n  return typeof t.groupIndex < \"u\";\n}\nfunction vo({ offset: t }, e) {\n  return e === t ? 0 : e < t ? -1 : 1;\n}\nfunction ie(t, e, n) {\n  if (e.length === 0)\n    return 0;\n  const { index: o, offset: r, size: s } = Mn(e, t, De), i = t - o, l = s * i + (i - 1) * n + r;\n  return l > 0 ? l + n : l;\n}\nfunction Wn(t, e) {\n  if (!be(e))\n    return t;\n  let n = 0;\n  for (; e.groupIndices[n] <= t + n; )\n    n++;\n  return t + n;\n}\nfunction _n(t, e, n) {\n  if (yo(t))\n    return e.groupIndices[t.groupIndex] + 1;\n  {\n    const o = t.index === \"LAST\" ? n : t.index;\n    let r = Wn(o, e);\n    return r = Math.max(0, r, Math.min(n, r)), r;\n  }\n}\nfunction bo(t, e, n, o = 0) {\n  return o > 0 && (e = Math.max(e, Mn(t, o, De).offset)), Fn(To(t, e, n, vo), Eo);\n}\nfunction Ro(t, [e, n, o, r]) {\n  e.length > 0 && o(\"received item sizes\", e, ht.DEBUG);\n  const s = t.sizeTree;\n  let i = s, l = 0;\n  if (n.length > 0 && j(s) && e.length === 2) {\n    const p = e[0].size, m = e[1].size;\n    i = n.reduce((w, I) => mt(mt(w, I, p), I + 1, m), i);\n  } else\n    [i, l] = wo(i, e);\n  if (i === s)\n    return t;\n  const { lastIndex: c, lastOffset: u, lastSize: f, offsetTree: S } = Pe(t.offsetTree, l, i, r);\n  return {\n    groupIndices: n,\n    groupOffsetTree: n.reduce((p, m) => mt(p, m, ie(m, S, r)), Ut()),\n    lastIndex: c,\n    lastOffset: u,\n    lastSize: f,\n    offsetTree: S,\n    sizeTree: i\n  };\n}\nfunction Ho(t) {\n  return _t(t).map(({ k: e, v: n }, o, r) => {\n    const s = r[o + 1];\n    return { endIndex: s ? s.k - 1 : 1 / 0, size: n, startIndex: e };\n  });\n}\nfunction mn(t, e) {\n  let n = 0, o = 0;\n  for (; n < t; )\n    n += e[o + 1] - e[o] - 1, o++;\n  return o - (n === t ? 0 : 1);\n}\nfunction Pe(t, e, n, o) {\n  let r = t, s = 0, i = 0, l = 0, c = 0;\n  if (e !== 0) {\n    c = Se(r, e - 1, De), l = r[c].offset;\n    const f = Ct(n, e - 1);\n    s = f[0], i = f[1], r.length && r[c].size === Ct(n, e)[1] && (c -= 1), r = r.slice(0, c + 1);\n  } else\n    r = [];\n  for (const { start: u, value: f } of ve(n, e, 1 / 0)) {\n    const S = u - s, p = S * i + l + S * o;\n    r.push({\n      index: u,\n      offset: p,\n      size: f\n    }), s = u, l = p, i = f;\n  }\n  return {\n    lastIndex: s,\n    lastOffset: l,\n    lastSize: i,\n    offsetTree: r\n  };\n}\nfunction Eo(t) {\n  return { index: t.index, value: t };\n}\nfunction ko(t) {\n  const { endIndex: e, size: n, startIndex: o } = t;\n  return (r) => r.start === o && (r.end === e || r.end === 1 / 0) && r.value === n;\n}\nconst Bo = {\n  offsetHeight: \"height\",\n  offsetWidth: \"width\"\n}, Et = U(\n  ([{ log: t }, { recalcInProgress: e }]) => {\n    const n = $(), o = $(), r = ct(o, 0), s = $(), i = $(), l = y(0), c = y([]), u = y(void 0), f = y(void 0), S = y((h, d) => wt(h, Bo[d])), p = y(void 0), m = y(0), w = Co(), I = ct(\n      x(n, G(c, t, m), bt(Ro, w), Y()),\n      w\n    ), C = ct(\n      x(\n        c,\n        Y(),\n        bt((h, d) => ({ current: d, prev: h.current }), {\n          current: [],\n          prev: []\n        }),\n        E(({ prev: h }) => h)\n      ),\n      []\n    );\n    F(\n      x(\n        c,\n        P((h) => h.length > 0),\n        G(I, m),\n        E(([h, d, R]) => {\n          const B = h.reduce((O, L, V) => mt(O, L, ie(L, d.offsetTree, R) || V), Ut());\n          return {\n            ...d,\n            groupIndices: h,\n            groupOffsetTree: B\n          };\n        })\n      ),\n      I\n    ), F(\n      x(\n        o,\n        G(I),\n        P(([h, { lastIndex: d }]) => h < d),\n        E(([h, { lastIndex: d, lastSize: R }]) => [\n          {\n            endIndex: d,\n            size: R,\n            startIndex: h\n          }\n        ])\n      ),\n      n\n    ), F(u, f);\n    const g = ct(\n      x(\n        u,\n        E((h) => h === void 0)\n      ),\n      !0\n    );\n    F(\n      x(\n        f,\n        P((h) => h !== void 0 && j(lt(I).sizeTree)),\n        E((h) => [{ endIndex: 0, size: h, startIndex: 0 }])\n      ),\n      n\n    );\n    const a = pt(\n      x(\n        n,\n        G(I),\n        bt(\n          ({ sizes: h }, [d, R]) => ({\n            changed: R !== h,\n            sizes: R\n          }),\n          { changed: !1, sizes: w }\n        ),\n        E((h) => h.changed)\n      )\n    );\n    K(\n      x(\n        l,\n        bt(\n          (h, d) => ({ diff: h.prev - d, prev: d }),\n          { diff: 0, prev: 0 }\n        ),\n        E((h) => h.diff)\n      ),\n      (h) => {\n        const { groupIndices: d } = lt(I);\n        if (h > 0)\n          W(e, !0), W(s, h + mn(h, d));\n        else if (h < 0) {\n          const R = lt(C);\n          R.length > 0 && (h -= mn(-h, R)), W(i, h);\n        }\n      }\n    ), K(x(l, G(t)), ([h, d]) => {\n      h < 0 && d(\n        \"`firstItemIndex` prop should not be set to less than zero. If you don't know the total count, just use a very high value\",\n        { firstItemIndex: l },\n        ht.ERROR\n      );\n    });\n    const T = pt(s);\n    F(\n      x(\n        s,\n        G(I),\n        E(([h, d]) => {\n          const R = d.groupIndices.length > 0, B = [], O = d.lastSize;\n          if (R) {\n            const L = re(d.sizeTree, 0);\n            let V = 0, D = 0;\n            for (; V < h; ) {\n              const k = d.groupIndices[D], q = d.groupIndices.length === D + 1 ? 1 / 0 : d.groupIndices[D + 1] - k - 1;\n              B.push({\n                endIndex: k,\n                size: L,\n                startIndex: k\n              }), B.push({\n                endIndex: k + 1 + q - 1,\n                size: O,\n                startIndex: k + 1\n              }), D++, V += q + 1;\n            }\n            const J = _t(d.sizeTree);\n            return V !== h && J.shift(), J.reduce(\n              (k, { k: q, v: st }) => {\n                let dt = k.ranges;\n                return k.prevSize !== 0 && (dt = [\n                  ...k.ranges,\n                  {\n                    endIndex: q + h - 1,\n                    size: k.prevSize,\n                    startIndex: k.prevIndex\n                  }\n                ]), {\n                  prevIndex: q + h,\n                  prevSize: st,\n                  ranges: dt\n                };\n              },\n              {\n                prevIndex: h,\n                prevSize: 0,\n                ranges: B\n              }\n            ).ranges;\n          }\n          return _t(d.sizeTree).reduce(\n            (L, { k: V, v: D }) => ({\n              prevIndex: V + h,\n              prevSize: D,\n              ranges: [...L.ranges, { endIndex: V + h - 1, size: L.prevSize, startIndex: L.prevIndex }]\n            }),\n            {\n              prevIndex: 0,\n              prevSize: O,\n              ranges: []\n            }\n          ).ranges;\n        })\n      ),\n      n\n    );\n    const b = pt(\n      x(\n        i,\n        G(I, m),\n        E(([h, { offsetTree: d }, R]) => {\n          const B = -h;\n          return ie(B, d, R);\n        })\n      )\n    );\n    return F(\n      x(\n        i,\n        G(I, m),\n        E(([h, d, R]) => {\n          if (d.groupIndices.length > 0) {\n            if (j(d.sizeTree))\n              return d;\n            let O = Ut();\n            const L = lt(C);\n            let V = 0, D = 0, J = 0;\n            for (; V < -h; ) {\n              J = L[D];\n              const k = L[D + 1] - J - 1;\n              D++, V += k + 1;\n            }\n            if (O = _t(d.sizeTree).reduce((k, { k: q, v: st }) => mt(k, Math.max(0, q + h), st), O), V !== -h) {\n              const k = re(d.sizeTree, J);\n              O = mt(O, 0, k);\n              const q = Ct(d.sizeTree, -h + 1)[1];\n              O = mt(O, 1, q);\n            }\n            return {\n              ...d,\n              sizeTree: O,\n              ...Pe(d.offsetTree, 0, O, R)\n            };\n          } else {\n            const O = _t(d.sizeTree).reduce((L, { k: V, v: D }) => mt(L, Math.max(0, V + h), D), Ut());\n            return {\n              ...d,\n              sizeTree: O,\n              ...Pe(d.offsetTree, 0, O, R)\n            };\n          }\n        })\n      ),\n      I\n    ), {\n      beforeUnshiftWith: T,\n      // input\n      data: p,\n      defaultItemSize: f,\n      firstItemIndex: l,\n      fixedItemSize: u,\n      gap: m,\n      groupIndices: c,\n      itemSize: S,\n      listRefresh: a,\n      shiftWith: i,\n      shiftWithOffset: b,\n      sizeRanges: n,\n      // output\n      sizes: I,\n      statefulTotalCount: r,\n      totalCount: o,\n      trackItemSizes: g,\n      unshiftWith: s\n    };\n  },\n  X(Vt, Ne),\n  { singleton: !0 }\n);\nfunction Oo(t) {\n  return t.reduce(\n    (e, n) => (e.groupIndices.push(e.totalCount), e.totalCount += n + 1, e),\n    {\n      groupIndices: [],\n      totalCount: 0\n    }\n  );\n}\nconst Gn = U(\n  ([{ groupIndices: t, sizes: e, totalCount: n }, { headerHeight: o, scrollTop: r }]) => {\n    const s = $(), i = $(), l = pt(x(s, E(Oo)));\n    return F(\n      x(\n        l,\n        E((c) => c.totalCount)\n      ),\n      n\n    ), F(\n      x(\n        l,\n        E((c) => c.groupIndices)\n      ),\n      t\n    ), F(\n      x(\n        rt(r, e, o),\n        P(([c, u]) => be(u)),\n        E(([c, u, f]) => Ct(u.groupOffsetTree, Math.max(c - f, 0), \"v\")[0]),\n        Y(),\n        E((c) => [c])\n      ),\n      i\n    ), { groupCounts: s, topItemsIndexes: i };\n  },\n  X(Et, at)\n), Pt = U(\n  ([{ log: t }]) => {\n    const e = y(!1), n = pt(\n      x(\n        e,\n        P((o) => o),\n        Y()\n      )\n    );\n    return K(e, (o) => {\n      o && lt(t)(\"props updated\", {}, ht.DEBUG);\n    }), { didMount: n, propsReady: e };\n  },\n  X(Vt),\n  { singleton: !0 }\n), Fo = typeof document < \"u\" && \"scrollBehavior\" in document.documentElement.style;\nfunction Nn(t) {\n  const e = typeof t == \"number\" ? { index: t } : t;\n  return e.align || (e.align = \"start\"), (!e.behavior || !Fo) && (e.behavior = \"auto\"), e.offset || (e.offset = 0), e;\n}\nconst ce = U(\n  ([\n    { gap: t, listRefresh: e, sizes: n, totalCount: o },\n    {\n      fixedFooterHeight: r,\n      fixedHeaderHeight: s,\n      footerHeight: i,\n      headerHeight: l,\n      scrollingInProgress: c,\n      scrollTo: u,\n      smoothScrollTargetReached: f,\n      viewportHeight: S\n    },\n    { log: p }\n  ]) => {\n    const m = $(), w = $(), I = y(0);\n    let C = null, g = null, a = null;\n    function T() {\n      C && (C(), C = null), a && (a(), a = null), g && (clearTimeout(g), g = null), W(c, !1);\n    }\n    return F(\n      x(\n        m,\n        G(n, S, o, I, l, i, p),\n        G(t, s, r),\n        E(\n          ([\n            [b, h, d, R, B, O, L, V],\n            D,\n            J,\n            nt\n          ]) => {\n            const k = Nn(b), { align: q, behavior: st, offset: dt } = k, St = R - 1, ft = _n(k, h, St);\n            let ut = ie(ft, h.offsetTree, D) + O;\n            q === \"end\" ? (ut += J + Ct(h.sizeTree, ft)[1] - d + nt, ft === St && (ut += L)) : q === \"center\" ? ut += (J + Ct(h.sizeTree, ft)[1] - d + nt) / 2 : ut -= B, dt && (ut += dt);\n            const At = (xt) => {\n              T(), xt ? (V(\"retrying to scroll to\", { location: b }, ht.DEBUG), W(m, b)) : (W(w, !0), V(\"list did not change, scroll successful\", {}, ht.DEBUG));\n            };\n            if (T(), st === \"smooth\") {\n              let xt = !1;\n              a = K(e, (Xt) => {\n                xt = xt || Xt;\n              }), C = Rt(f, () => {\n                At(xt);\n              });\n            } else\n              C = Rt(x(e, Lo(150)), At);\n            return g = setTimeout(() => {\n              T();\n            }, 1200), W(c, !0), V(\"scrolling from index to\", { behavior: st, index: ft, top: ut }, ht.DEBUG), { behavior: st, top: ut };\n          }\n        )\n      ),\n      u\n    ), {\n      scrollTargetReached: w,\n      scrollToIndex: m,\n      topListHeight: I\n    };\n  },\n  X(Et, at, Vt),\n  { singleton: !0 }\n);\nfunction Lo(t) {\n  return (e) => {\n    const n = setTimeout(() => {\n      e(!1);\n    }, t);\n    return (o) => {\n      o && (e(!0), clearTimeout(n));\n    };\n  };\n}\nfunction $e(t, e) {\n  t == 0 ? e() : requestAnimationFrame(() => {\n    $e(t - 1, e);\n  });\n}\nfunction Ue(t, e) {\n  const n = e - 1;\n  return typeof t == \"number\" ? t : t.index === \"LAST\" ? n : t.index;\n}\nconst ue = U(\n  ([{ defaultItemSize: t, listRefresh: e, sizes: n }, { scrollTop: o }, { scrollTargetReached: r, scrollToIndex: s }, { didMount: i }]) => {\n    const l = y(!0), c = y(0), u = y(!0);\n    return F(\n      x(\n        i,\n        G(c),\n        P(([f, S]) => !!S),\n        vt(!1)\n      ),\n      l\n    ), F(\n      x(\n        i,\n        G(c),\n        P(([f, S]) => !!S),\n        vt(!1)\n      ),\n      u\n    ), K(\n      x(\n        rt(e, i),\n        G(l, n, t, u),\n        P(([[, f], S, { sizeTree: p }, m, w]) => f && (!j(p) || Me(m)) && !S && !w),\n        G(c)\n      ),\n      ([, f]) => {\n        Rt(r, () => {\n          W(u, !0);\n        }), $e(4, () => {\n          Rt(o, () => {\n            W(l, !0);\n          }), W(s, f);\n        });\n      }\n    ), {\n      initialItemFinalLocationReached: u,\n      initialTopMostItemIndex: c,\n      scrolledToInitialItem: l\n    };\n  },\n  X(Et, at, ce, Pt),\n  { singleton: !0 }\n);\nfunction Dn(t, e) {\n  return Math.abs(t - e) < 1.01;\n}\nconst le = \"up\", te = \"down\", zo = \"none\", Vo = {\n  atBottom: !1,\n  notAtBottomBecause: \"NOT_SHOWING_LAST_ITEM\",\n  state: {\n    offsetBottom: 0,\n    scrollHeight: 0,\n    scrollTop: 0,\n    viewportHeight: 0\n  }\n}, Po = 0, ae = U(([{ footerHeight: t, headerHeight: e, scrollBy: n, scrollContainerState: o, scrollTop: r, viewportHeight: s }]) => {\n  const i = y(!1), l = y(!0), c = $(), u = $(), f = y(4), S = y(Po), p = ct(\n    x(\n      an(x(A(r), jt(1), vt(!0)), x(A(r), jt(1), vt(!1), un(100))),\n      Y()\n    ),\n    !1\n  ), m = ct(\n    x(an(x(n, vt(!0)), x(n, vt(!1), un(200))), Y()),\n    !1\n  );\n  F(\n    x(\n      rt(A(r), A(S)),\n      E(([a, T]) => a <= T),\n      Y()\n    ),\n    l\n  ), F(x(l, Lt(50)), u);\n  const w = pt(\n    x(\n      rt(o, A(s), A(e), A(t), A(f)),\n      bt((a, [{ scrollHeight: T, scrollTop: b }, h, d, R, B]) => {\n        const O = b + h - T > -B, L = {\n          scrollHeight: T,\n          scrollTop: b,\n          viewportHeight: h\n        };\n        if (O) {\n          let D, J;\n          return b > a.state.scrollTop ? (D = \"SCROLLED_DOWN\", J = a.state.scrollTop - b) : (D = \"SIZE_DECREASED\", J = a.state.scrollTop - b || a.scrollTopDelta), {\n            atBottom: !0,\n            atBottomBecause: D,\n            scrollTopDelta: J,\n            state: L\n          };\n        }\n        let V;\n        return L.scrollHeight > a.state.scrollHeight ? V = \"SIZE_INCREASED\" : h < a.state.viewportHeight ? V = \"VIEWPORT_HEIGHT_DECREASING\" : b < a.state.scrollTop ? V = \"SCROLLING_UPWARDS\" : V = \"NOT_FULLY_SCROLLED_TO_LAST_ITEM_BOTTOM\", {\n          atBottom: !1,\n          notAtBottomBecause: V,\n          state: L\n        };\n      }, Vo),\n      Y((a, T) => a && a.atBottom === T.atBottom)\n    )\n  ), I = ct(\n    x(\n      o,\n      bt(\n        (a, { scrollHeight: T, scrollTop: b, viewportHeight: h }) => {\n          if (Dn(a.scrollHeight, T))\n            return {\n              changed: !1,\n              jump: 0,\n              scrollHeight: T,\n              scrollTop: b\n            };\n          {\n            const d = T - (b + h) < 1;\n            return a.scrollTop !== b && d ? {\n              changed: !0,\n              jump: a.scrollTop - b,\n              scrollHeight: T,\n              scrollTop: b\n            } : {\n              changed: !0,\n              jump: 0,\n              scrollHeight: T,\n              scrollTop: b\n            };\n          }\n        },\n        { changed: !1, jump: 0, scrollHeight: 0, scrollTop: 0 }\n      ),\n      P((a) => a.changed),\n      E((a) => a.jump)\n    ),\n    0\n  );\n  F(\n    x(\n      w,\n      E((a) => a.atBottom)\n    ),\n    i\n  ), F(x(i, Lt(50)), c);\n  const C = y(te);\n  F(\n    x(\n      o,\n      E(({ scrollTop: a }) => a),\n      Y(),\n      bt(\n        (a, T) => lt(m) ? { direction: a.direction, prevScrollTop: T } : { direction: T < a.prevScrollTop ? le : te, prevScrollTop: T },\n        { direction: te, prevScrollTop: 0 }\n      ),\n      E((a) => a.direction)\n    ),\n    C\n  ), F(x(o, Lt(50), vt(zo)), C);\n  const g = y(0);\n  return F(\n    x(\n      p,\n      P((a) => !a),\n      vt(0)\n    ),\n    g\n  ), F(\n    x(\n      r,\n      Lt(100),\n      G(p),\n      P(([a, T]) => !!T),\n      bt(([a, T], [b]) => [T, b], [0, 0]),\n      E(([a, T]) => T - a)\n    ),\n    g\n  ), {\n    atBottomState: w,\n    atBottomStateChange: c,\n    atBottomThreshold: f,\n    atTopStateChange: u,\n    atTopThreshold: S,\n    isAtBottom: i,\n    isAtTop: l,\n    isScrolling: p,\n    lastJumpDueToItemResize: I,\n    scrollDirection: C,\n    scrollVelocity: g\n  };\n}, X(at)), xe = \"top\", Te = \"bottom\", pn = \"none\";\nfunction hn(t, e, n) {\n  return typeof t == \"number\" ? n === le && e === xe || n === te && e === Te ? t : 0 : n === le ? e === xe ? t.main : t.reverse : e === Te ? t.main : t.reverse;\n}\nfunction gn(t, e) {\n  var n;\n  return typeof t == \"number\" ? t : (n = t[e]) != null ? n : 0;\n}\nconst Ke = U(\n  ([{ deviation: t, fixedHeaderHeight: e, headerHeight: n, scrollTop: o, viewportHeight: r }]) => {\n    const s = $(), i = y(0), l = y(0), c = y(0), u = ct(\n      x(\n        rt(\n          A(o),\n          A(r),\n          A(n),\n          A(s, se),\n          A(c),\n          A(i),\n          A(e),\n          A(t),\n          A(l)\n        ),\n        E(\n          ([\n            f,\n            S,\n            p,\n            [m, w],\n            I,\n            C,\n            g,\n            a,\n            T\n          ]) => {\n            const b = f - a, h = C + g, d = Math.max(p - b, 0);\n            let R = pn;\n            const B = gn(T, xe), O = gn(T, Te);\n            return m -= a, m += p + g, w += p + g, w -= a, m > f + h - B && (R = le), w < f - d + S + O && (R = te), R !== pn ? [\n              Math.max(b - p - hn(I, xe, R) - B, 0),\n              b - d - g + S + hn(I, Te, R) + O\n            ] : null;\n          }\n        ),\n        P((f) => f != null),\n        Y(se)\n      ),\n      [0, 0]\n    );\n    return {\n      increaseViewportBy: l,\n      // input\n      listBoundary: s,\n      overscan: c,\n      topListHeight: i,\n      // output\n      visibleRange: u\n    };\n  },\n  X(at),\n  { singleton: !0 }\n);\nfunction Ao(t, e, n) {\n  if (be(e)) {\n    const o = Wn(t, e);\n    return [\n      { index: Ct(e.groupOffsetTree, o)[0], offset: 0, size: 0 },\n      { data: n == null ? void 0 : n[0], index: o, offset: 0, size: 0 }\n    ];\n  }\n  return [{ data: n == null ? void 0 : n[0], index: t, offset: 0, size: 0 }];\n}\nconst ke = {\n  bottom: 0,\n  firstItemIndex: 0,\n  items: [],\n  offsetBottom: 0,\n  offsetTop: 0,\n  top: 0,\n  topItems: [],\n  topListHeight: 0,\n  totalCount: 0\n};\nfunction Ie(t, e, n, o, r, s) {\n  const { lastIndex: i, lastOffset: l, lastSize: c } = r;\n  let u = 0, f = 0;\n  if (t.length > 0) {\n    u = t[0].offset;\n    const I = t[t.length - 1];\n    f = I.offset + I.size;\n  }\n  const S = n - i, p = l + S * c + (S - 1) * o, m = u, w = p - f;\n  return {\n    bottom: f,\n    firstItemIndex: s,\n    items: In(t, r, s),\n    offsetBottom: w,\n    offsetTop: u,\n    top: m,\n    topItems: In(e, r, s),\n    topListHeight: e.reduce((I, C) => C.size + I, 0),\n    totalCount: n\n  };\n}\nfunction $n(t, e, n, o, r, s) {\n  let i = 0;\n  if (n.groupIndices.length > 0)\n    for (const f of n.groupIndices) {\n      if (f - i >= t)\n        break;\n      i++;\n    }\n  const l = t + i, c = Ue(e, l), u = Array.from({ length: l }).map((f, S) => ({\n    data: s[S + c],\n    index: S + c,\n    offset: 0,\n    size: 0\n  }));\n  return Ie(u, [], l, r, n, o);\n}\nfunction In(t, e, n) {\n  if (t.length === 0)\n    return [];\n  if (!be(e))\n    return t.map((u) => ({ ...u, index: u.index + n, originalIndex: u.index }));\n  const o = t[0].index, r = t[t.length - 1].index, s = [], i = ve(e.groupOffsetTree, o, r);\n  let l, c = 0;\n  for (const u of t) {\n    (!l || l.end < u.index) && (l = i.shift(), c = e.groupIndices.indexOf(l.start));\n    let f;\n    u.index === l.start ? f = {\n      index: c,\n      type: \"group\"\n    } : f = {\n      groupIndex: c,\n      index: u.index - (c + 1) + n\n    }, s.push({\n      ...f,\n      data: u.data,\n      offset: u.offset,\n      originalIndex: u.index,\n      size: u.size\n    });\n  }\n  return s;\n}\nconst Gt = U(\n  ([\n    { data: t, firstItemIndex: e, gap: n, sizes: o, totalCount: r },\n    s,\n    { listBoundary: i, topListHeight: l, visibleRange: c },\n    { initialTopMostItemIndex: u, scrolledToInitialItem: f },\n    { topListHeight: S },\n    p,\n    { didMount: m },\n    { recalcInProgress: w }\n  ]) => {\n    const I = y([]), C = y(0), g = $();\n    F(s.topItemsIndexes, I);\n    const a = ct(\n      x(\n        rt(\n          m,\n          w,\n          A(c, se),\n          A(r),\n          A(o),\n          A(u),\n          f,\n          A(I),\n          A(e),\n          A(n),\n          t\n        ),\n        P(([d, R, , B, , , , , , , O]) => {\n          const L = O && O.length !== B;\n          return d && !R && !L;\n        }),\n        E(\n          ([\n            ,\n            ,\n            [d, R],\n            B,\n            O,\n            L,\n            V,\n            D,\n            J,\n            nt,\n            k\n          ]) => {\n            const q = O, { offsetTree: st, sizeTree: dt } = q, St = lt(C);\n            if (B === 0)\n              return { ...ke, totalCount: B };\n            if (d === 0 && R === 0)\n              return St === 0 ? { ...ke, totalCount: B } : $n(St, L, O, J, nt, k || []);\n            if (j(dt))\n              return St > 0 ? null : Ie(\n                Ao(Ue(L, B), q, k),\n                [],\n                B,\n                nt,\n                q,\n                J\n              );\n            const ft = [];\n            if (D.length > 0) {\n              const Mt = D[0], yt = D[D.length - 1];\n              let kt = 0;\n              for (const v of ve(dt, Mt, yt)) {\n                const N = v.value, Q = Math.max(v.start, Mt), it = Math.min(v.end, yt);\n                for (let tt = Q; tt <= it; tt++)\n                  ft.push({ data: k == null ? void 0 : k[tt], index: tt, offset: kt, size: N }), kt += N;\n              }\n            }\n            if (!V)\n              return Ie([], ft, B, nt, q, J);\n            const ut = D.length > 0 ? D[D.length - 1] + 1 : 0, At = bo(st, d, R, ut);\n            if (At.length === 0)\n              return null;\n            const xt = B - 1, Xt = ye([], (Mt) => {\n              for (const yt of At) {\n                const kt = yt.value;\n                let v = kt.offset, N = yt.start;\n                const Q = kt.size;\n                if (kt.offset < d) {\n                  N += Math.floor((d - kt.offset + nt) / (Q + nt));\n                  const tt = N - yt.start;\n                  v += tt * Q + tt * nt;\n                }\n                N < ut && (v += (ut - N) * Q, N = ut);\n                const it = Math.min(yt.end, xt);\n                for (let tt = N; tt <= it && !(v >= R); tt++)\n                  Mt.push({ data: k == null ? void 0 : k[tt], index: tt, offset: v, size: Q }), v += Q + nt;\n              }\n            });\n            return Ie(Xt, ft, B, nt, q, J);\n          }\n        ),\n        //@ts-expect-error filter needs to be fixed\n        P((d) => d !== null),\n        Y()\n      ),\n      ke\n    );\n    F(\n      x(\n        t,\n        P(Me),\n        E((d) => d == null ? void 0 : d.length)\n      ),\n      r\n    ), F(\n      x(\n        a,\n        E((d) => d.topListHeight)\n      ),\n      S\n    ), F(S, l), F(\n      x(\n        a,\n        E((d) => [d.top, d.bottom])\n      ),\n      i\n    ), F(\n      x(\n        a,\n        E((d) => d.items)\n      ),\n      g\n    );\n    const T = pt(\n      x(\n        a,\n        P(({ items: d }) => d.length > 0),\n        G(r, t),\n        P(([{ items: d }, R]) => d[d.length - 1].originalIndex === R - 1),\n        E(([, d, R]) => [d - 1, R]),\n        Y(se),\n        E(([d]) => d)\n      )\n    ), b = pt(\n      x(\n        a,\n        Lt(200),\n        P(({ items: d, topItems: R }) => d.length > 0 && d[0].originalIndex === R.length),\n        E(({ items: d }) => d[0].index),\n        Y()\n      )\n    ), h = pt(\n      x(\n        a,\n        P(({ items: d }) => d.length > 0),\n        E(({ items: d }) => {\n          let R = 0, B = d.length - 1;\n          for (; d[R].type === \"group\" && R < B; )\n            R++;\n          for (; d[B].type === \"group\" && B > R; )\n            B--;\n          return {\n            endIndex: d[B].index,\n            startIndex: d[R].index\n          };\n        }),\n        Y(An)\n      )\n    );\n    return { endReached: T, initialItemCount: C, itemsRendered: g, listState: a, rangeChanged: h, startReached: b, topItemsIndexes: I, ...p };\n  },\n  X(\n    Et,\n    Gn,\n    Ke,\n    ue,\n    ce,\n    ae,\n    Pt,\n    Ne\n  ),\n  { singleton: !0 }\n), Un = U(\n  ([{ fixedFooterHeight: t, fixedHeaderHeight: e, footerHeight: n, headerHeight: o }, { listState: r }]) => {\n    const s = $(), i = ct(\n      x(\n        rt(n, t, o, e, r),\n        E(([l, c, u, f, S]) => l + c + u + f + S.offsetBottom + S.bottom)\n      ),\n      0\n    );\n    return F(A(i), s), { totalListHeight: i, totalListHeightChanged: s };\n  },\n  X(at, Gt),\n  { singleton: !0 }\n), Mo = U(\n  ([{ viewportHeight: t }, { totalListHeight: e }]) => {\n    const n = y(!1), o = ct(\n      x(\n        rt(n, t, e),\n        P(([r]) => r),\n        E(([, r, s]) => Math.max(0, r - s)),\n        Lt(0),\n        Y()\n      ),\n      0\n    );\n    return { alignToBottom: n, paddingTopAddition: o };\n  },\n  X(at, Un),\n  { singleton: !0 }\n);\nfunction Sn(t) {\n  return t ? t === \"smooth\" ? \"smooth\" : \"auto\" : !1;\n}\nconst Wo = (t, e) => typeof t == \"function\" ? Sn(t(e)) : e && Sn(t), _o = U(\n  ([\n    { listRefresh: t, totalCount: e },\n    { atBottomState: n, isAtBottom: o },\n    { scrollToIndex: r },\n    { scrolledToInitialItem: s },\n    { didMount: i, propsReady: l },\n    { log: c },\n    { scrollingInProgress: u }\n  ]) => {\n    const f = y(!1), S = $();\n    let p = null;\n    function m(I) {\n      W(r, {\n        align: \"end\",\n        behavior: I,\n        index: \"LAST\"\n      });\n    }\n    K(\n      x(\n        rt(x(A(e), jt(1)), i),\n        G(A(f), o, s, u),\n        E(([[I, C], g, a, T, b]) => {\n          let h = C && T, d = \"auto\";\n          return h && (d = Wo(g, a || b), h = h && !!d), { followOutputBehavior: d, shouldFollow: h, totalCount: I };\n        }),\n        P(({ shouldFollow: I }) => I)\n      ),\n      ({ followOutputBehavior: I, totalCount: C }) => {\n        p && (p(), p = null), p = Rt(t, () => {\n          lt(c)(\"following output to \", { totalCount: C }, ht.DEBUG), m(I), p = null;\n        });\n      }\n    );\n    function w(I) {\n      const C = Rt(n, (g) => {\n        I && !g.atBottom && g.notAtBottomBecause === \"SIZE_INCREASED\" && !p && (lt(c)(\"scrolling to bottom due to increased size\", {}, ht.DEBUG), m(\"auto\"));\n      });\n      setTimeout(C, 100);\n    }\n    return K(\n      x(\n        rt(A(f), e, l),\n        P(([I, , C]) => I && C),\n        bt(\n          ({ value: I }, [, C]) => ({ refreshed: I === C, value: C }),\n          { refreshed: !1, value: 0 }\n        ),\n        P(({ refreshed: I }) => I),\n        G(f, e)\n      ),\n      ([, I]) => {\n        lt(s) && w(I !== !1);\n      }\n    ), K(S, () => {\n      w(lt(f) !== !1);\n    }), K(rt(A(f), n), ([I, C]) => {\n      I && !C.atBottom && C.notAtBottomBecause === \"VIEWPORT_HEIGHT_DECREASING\" && m(\"auto\");\n    }), { autoscrollToBottom: S, followOutput: f };\n  },\n  X(Et, ae, ce, ue, Pt, Vt, at)\n), Go = U(\n  ([{ data: t, firstItemIndex: e, gap: n, sizes: o }, { initialTopMostItemIndex: r }, { initialItemCount: s, listState: i }, { didMount: l }]) => (F(\n    x(\n      l,\n      G(s),\n      P(([, c]) => c !== 0),\n      G(r, o, e, n, t),\n      E(([[, c], u, f, S, p, m = []]) => $n(c, u, f, S, p, m))\n    ),\n    i\n  ), {}),\n  X(Et, ue, Gt, Pt),\n  { singleton: !0 }\n), No = U(\n  ([{ didMount: t }, { scrollTo: e }, { listState: n }]) => {\n    const o = y(0);\n    return K(\n      x(\n        t,\n        G(o),\n        P(([, r]) => r !== 0),\n        E(([, r]) => ({ top: r }))\n      ),\n      (r) => {\n        Rt(\n          x(\n            n,\n            jt(1),\n            P((s) => s.items.length > 1)\n          ),\n          () => {\n            requestAnimationFrame(() => {\n              W(e, r);\n            });\n          }\n        );\n      }\n    ), {\n      initialScrollTop: o\n    };\n  },\n  X(Pt, at, Gt),\n  { singleton: !0 }\n), Do = ({\n  itemBottom: t,\n  itemTop: e,\n  locationParams: { align: n, behavior: o, ...r },\n  viewportBottom: s,\n  viewportTop: i\n}) => e < i ? { ...r, align: n != null ? n : \"start\", behavior: o } : t > s ? { ...r, align: n != null ? n : \"end\", behavior: o } : null, $o = U(\n  ([\n    { gap: t, sizes: e, totalCount: n },\n    { fixedFooterHeight: o, fixedHeaderHeight: r, headerHeight: s, scrollingInProgress: i, scrollTop: l, viewportHeight: c },\n    { scrollToIndex: u }\n  ]) => {\n    const f = $();\n    return F(\n      x(\n        f,\n        G(e, c, n, s, r, o, l),\n        G(t),\n        E(([[S, p, m, w, I, C, g, a], T]) => {\n          const { align: b, behavior: h, calculateViewLocation: d = Do, done: R, ...B } = S, O = _n(S, p, w - 1), L = ie(O, p.offsetTree, T) + I + C, V = L + Ct(p.sizeTree, O)[1], D = a + C, J = a + m - g, nt = d({\n            itemBottom: V,\n            itemTop: L,\n            locationParams: { align: b, behavior: h, ...B },\n            viewportBottom: J,\n            viewportTop: D\n          });\n          return nt ? R && Rt(\n            x(\n              i,\n              P((k) => !k),\n              // skips the initial publish of false, and the cleanup call.\n              // but if scrollingInProgress is true, we skip the initial publish.\n              jt(lt(i) ? 1 : 2)\n            ),\n            R\n          ) : R && R(), nt;\n        }),\n        P((S) => S !== null)\n      ),\n      u\n    ), {\n      scrollIntoView: f\n    };\n  },\n  X(Et, at, ce, Gt, Vt),\n  { singleton: !0 }\n), Kn = U(\n  ([{ scrollVelocity: t }]) => {\n    const e = y(!1), n = $(), o = y(!1);\n    return F(\n      x(\n        t,\n        G(o, e, n),\n        P(([r, s]) => !!s),\n        E(([r, s, i, l]) => {\n          const { enter: c, exit: u } = s;\n          if (i) {\n            if (u(r, l))\n              return !1;\n          } else if (c(r, l))\n            return !0;\n          return i;\n        }),\n        Y()\n      ),\n      e\n    ), K(\n      x(rt(e, t, n), G(o)),\n      ([[r, s, i], l]) => {\n        r && l && l.change && l.change(s, i);\n      }\n    ), { isSeeking: e, scrollSeekConfiguration: o, scrollSeekRangeChanged: n, scrollVelocity: t };\n  },\n  X(ae),\n  { singleton: !0 }\n), je = U(([{ scrollContainerState: t, scrollTo: e }]) => {\n  const n = $(), o = $(), r = $(), s = y(!1), i = y(void 0);\n  return F(\n    x(\n      rt(n, o),\n      E(([{ scrollHeight: l, scrollTop: c, viewportHeight: u }, { offsetTop: f }]) => ({\n        scrollHeight: l,\n        scrollTop: Math.max(0, c - f),\n        viewportHeight: u\n      }))\n    ),\n    t\n  ), F(\n    x(\n      e,\n      G(o),\n      E(([l, { offsetTop: c }]) => ({\n        ...l,\n        top: l.top + c\n      }))\n    ),\n    r\n  ), {\n    customScrollParent: i,\n    // config\n    useWindowScroll: s,\n    // input\n    windowScrollContainerState: n,\n    // signals\n    windowScrollTo: r,\n    windowViewportRect: o\n  };\n}, X(at)), Uo = U(\n  ([\n    { sizeRanges: t, sizes: e },\n    { headerHeight: n, scrollTop: o },\n    { initialTopMostItemIndex: r },\n    { didMount: s },\n    { useWindowScroll: i, windowScrollContainerState: l, windowViewportRect: c }\n  ]) => {\n    const u = $(), f = y(void 0), S = y(null), p = y(null);\n    return F(l, S), F(c, p), K(\n      x(\n        u,\n        G(e, o, i, S, p, n)\n      ),\n      ([m, w, I, C, g, a, T]) => {\n        const b = Ho(w.sizeTree);\n        C && g !== null && a !== null && (I = g.scrollTop - a.offsetTop), I -= T, m({ ranges: b, scrollTop: I });\n      }\n    ), F(x(f, P(Me), E(Ko)), r), F(\n      x(\n        s,\n        G(f),\n        P(([, m]) => m !== void 0),\n        Y(),\n        E(([, m]) => m.ranges)\n      ),\n      t\n    ), {\n      getState: u,\n      restoreStateFrom: f\n    };\n  },\n  X(Et, at, ue, Pt, je)\n);\nfunction Ko(t) {\n  return { align: \"start\", index: 0, offset: t.scrollTop };\n}\nconst jo = U(([{ topItemsIndexes: t }]) => {\n  const e = y(0);\n  return F(\n    x(\n      e,\n      P((n) => n >= 0),\n      E((n) => Array.from({ length: n }).map((o, r) => r))\n    ),\n    t\n  ), { topItemCount: e };\n}, X(Gt));\nfunction jn(t) {\n  let e = !1, n;\n  return () => (e || (e = !0, n = t()), n);\n}\nconst qo = jn(() => /iP(ad|od|hone)/i.test(navigator.userAgent) && /WebKit/i.test(navigator.userAgent)), Yo = U(\n  ([\n    { deviation: t, scrollBy: e, scrollingInProgress: n, scrollTop: o },\n    { isAtBottom: r, isScrolling: s, lastJumpDueToItemResize: i, scrollDirection: l },\n    { listState: c },\n    { beforeUnshiftWith: u, gap: f, shiftWithOffset: S, sizes: p },\n    { log: m },\n    { recalcInProgress: w }\n  ]) => {\n    const I = pt(\n      x(\n        c,\n        G(i),\n        bt(\n          ([, g, a, T], [{ bottom: b, items: h, offsetBottom: d, totalCount: R }, B]) => {\n            const O = b + d;\n            let L = 0;\n            return a === R && g.length > 0 && h.length > 0 && (h[0].originalIndex === 0 && g[0].originalIndex === 0 || (L = O - T, L !== 0 && (L += B))), [L, h, R, O];\n          },\n          [0, [], 0, 0]\n        ),\n        P(([g]) => g !== 0),\n        G(o, l, n, r, m, w),\n        P(([, g, a, T, , , b]) => !b && !T && g !== 0 && a === le),\n        E(([[g], , , , , a]) => (a(\"Upward scrolling compensation\", { amount: g }, ht.DEBUG), g))\n      )\n    );\n    function C(g) {\n      g > 0 ? (W(e, { behavior: \"auto\", top: -g }), W(t, 0)) : (W(t, 0), W(e, { behavior: \"auto\", top: -g }));\n    }\n    return K(x(I, G(t, s)), ([g, a, T]) => {\n      T && qo() ? W(t, a - g) : C(-g);\n    }), K(\n      x(\n        rt(ct(s, !1), t, w),\n        P(([g, a, T]) => !g && !T && a !== 0),\n        E(([g, a]) => a),\n        Lt(1)\n      ),\n      C\n    ), F(\n      x(\n        S,\n        E((g) => ({ top: -g }))\n      ),\n      e\n    ), K(\n      x(\n        u,\n        G(p, f),\n        E(([g, { groupIndices: a, lastSize: T, sizeTree: b }, h]) => {\n          function d(R) {\n            return R * (T + h);\n          }\n          if (a.length === 0)\n            return d(g);\n          {\n            let R = 0;\n            const B = re(b, 0);\n            let O = 0, L = 0;\n            for (; O < g; ) {\n              O++, R += B;\n              let V = a.length === L + 1 ? 1 / 0 : a[L + 1] - a[L] - 1;\n              O + V > g && (R -= B, V = g - O + 1), O += V, R += d(V), L++;\n            }\n            return R;\n          }\n        })\n      ),\n      (g) => {\n        W(t, g), requestAnimationFrame(() => {\n          W(e, { top: g }), requestAnimationFrame(() => {\n            W(t, 0), W(w, !1);\n          });\n        });\n      }\n    ), { deviation: t };\n  },\n  X(at, ae, Gt, Et, Vt, Ne)\n), Zo = U(\n  ([\n    t,\n    e,\n    n,\n    o,\n    r,\n    s,\n    i,\n    l,\n    c,\n    u\n  ]) => ({\n    ...t,\n    ...e,\n    ...n,\n    ...o,\n    ...r,\n    ...s,\n    ...i,\n    ...l,\n    ...c,\n    ...u\n  }),\n  X(\n    Ke,\n    Go,\n    Pt,\n    Kn,\n    Un,\n    No,\n    Mo,\n    je,\n    $o,\n    Vt\n  )\n), qn = U(\n  ([\n    {\n      data: t,\n      defaultItemSize: e,\n      firstItemIndex: n,\n      fixedItemSize: o,\n      gap: r,\n      groupIndices: s,\n      itemSize: i,\n      sizeRanges: l,\n      sizes: c,\n      statefulTotalCount: u,\n      totalCount: f,\n      trackItemSizes: S\n    },\n    { initialItemFinalLocationReached: p, initialTopMostItemIndex: m, scrolledToInitialItem: w },\n    I,\n    C,\n    g,\n    { listState: a, topItemsIndexes: T, ...b },\n    { scrollToIndex: h },\n    d,\n    { topItemCount: R },\n    { groupCounts: B },\n    O\n  ]) => (F(b.rangeChanged, O.scrollSeekRangeChanged), F(\n    x(\n      O.windowViewportRect,\n      E((L) => L.visibleHeight)\n    ),\n    I.viewportHeight\n  ), {\n    data: t,\n    defaultItemHeight: e,\n    firstItemIndex: n,\n    fixedItemHeight: o,\n    gap: r,\n    groupCounts: B,\n    initialItemFinalLocationReached: p,\n    initialTopMostItemIndex: m,\n    scrolledToInitialItem: w,\n    sizeRanges: l,\n    topItemCount: R,\n    topItemsIndexes: T,\n    // input\n    totalCount: f,\n    ...g,\n    groupIndices: s,\n    itemSize: i,\n    listState: a,\n    scrollToIndex: h,\n    // output\n    statefulTotalCount: u,\n    trackItemSizes: S,\n    // exported from stateFlagsSystem\n    ...b,\n    // the bag of IO from featureGroup1System\n    ...O,\n    ...I,\n    sizes: c,\n    ...C\n  }),\n  X(\n    Et,\n    ue,\n    at,\n    Uo,\n    _o,\n    Gt,\n    ce,\n    Yo,\n    jo,\n    Gn,\n    Zo\n  )\n);\nfunction Xo(t, e) {\n  const n = {}, o = {};\n  let r = 0;\n  const s = t.length;\n  for (; r < s; )\n    o[t[r]] = 1, r += 1;\n  for (const i in e)\n    Object.hasOwn(o, i) || (n[i] = e[i]);\n  return n;\n}\nconst pe = typeof document < \"u\" ? react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_1__.useEffect;\nfunction qe(t, e, n) {\n  const o = Object.keys(e.required || {}), r = Object.keys(e.optional || {}), s = Object.keys(e.methods || {}), i = Object.keys(e.events || {}), l = react__WEBPACK_IMPORTED_MODULE_1__.createContext({});\n  function c(g, a) {\n    g.propsReady && W(g.propsReady, !1);\n    for (const T of o) {\n      const b = g[e.required[T]];\n      W(b, a[T]);\n    }\n    for (const T of r)\n      if (T in a) {\n        const b = g[e.optional[T]];\n        W(b, a[T]);\n      }\n    g.propsReady && W(g.propsReady, !0);\n  }\n  function u(g) {\n    return s.reduce((a, T) => (a[T] = (b) => {\n      const h = g[e.methods[T]];\n      W(h, b);\n    }, a), {});\n  }\n  function f(g) {\n    return i.reduce((a, T) => (a[T] = mo(g[e.events[T]]), a), {});\n  }\n  const S = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((g, a) => {\n    const { children: T, ...b } = g, [h] = react__WEBPACK_IMPORTED_MODULE_1__.useState(() => ye(ho(t), (B) => {\n      c(B, b);\n    })), [d] = react__WEBPACK_IMPORTED_MODULE_1__.useState(cn(f, h));\n    pe(() => {\n      for (const B of i)\n        B in b && K(d[B], b[B]);\n      return () => {\n        Object.values(d).map(We);\n      };\n    }, [b, d, h]), pe(() => {\n      c(h, b);\n    }), react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle(a, ln(u(h)));\n    const R = n;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(l.Provider, { value: h, children: n ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(R, { ...Xo([...o, ...r, ...i], b), children: T }) : T });\n  }), p = (g) => react__WEBPACK_IMPORTED_MODULE_1__.useCallback(kn(W, react__WEBPACK_IMPORTED_MODULE_1__.useContext(l)[g]), [g]), m = (g) => {\n    const T = react__WEBPACK_IMPORTED_MODULE_1__.useContext(l)[g], b = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(\n      (h) => K(T, h),\n      [T]\n    );\n    return react__WEBPACK_IMPORTED_MODULE_1__.useSyncExternalStore(\n      b,\n      () => lt(T),\n      () => lt(T)\n    );\n  }, w = (g) => {\n    const T = react__WEBPACK_IMPORTED_MODULE_1__.useContext(l)[g], [b, h] = react__WEBPACK_IMPORTED_MODULE_1__.useState(cn(lt, T));\n    return pe(\n      () => K(T, (d) => {\n        d !== b && h(ln(d));\n      }),\n      [T, b]\n    ), b;\n  }, I = react__WEBPACK_IMPORTED_MODULE_1__.version.startsWith(\"18\") ? m : w;\n  return {\n    Component: S,\n    useEmitter: (g, a) => {\n      const b = react__WEBPACK_IMPORTED_MODULE_1__.useContext(l)[g];\n      pe(() => K(b, a), [a, b]);\n    },\n    useEmitterValue: I,\n    usePublisher: p\n  };\n}\nconst Re = react__WEBPACK_IMPORTED_MODULE_1__.createContext(void 0), Yn = react__WEBPACK_IMPORTED_MODULE_1__.createContext(void 0), Zn = typeof document < \"u\" ? react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_1__.useEffect;\nfunction Be(t) {\n  return \"self\" in t;\n}\nfunction Jo(t) {\n  return \"body\" in t;\n}\nfunction Xn(t, e, n, o = Yt, r, s) {\n  const i = react__WEBPACK_IMPORTED_MODULE_1__.useRef(null), l = react__WEBPACK_IMPORTED_MODULE_1__.useRef(null), c = react__WEBPACK_IMPORTED_MODULE_1__.useRef(null), u = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(\n    (p) => {\n      let m, w, I;\n      const C = p.target;\n      if (Jo(C) || Be(C)) {\n        const a = Be(C) ? C : C.defaultView;\n        I = s ? a.scrollX : a.scrollY, m = s ? a.document.documentElement.scrollWidth : a.document.documentElement.scrollHeight, w = s ? a.innerWidth : a.innerHeight;\n      } else\n        I = s ? C.scrollLeft : C.scrollTop, m = s ? C.scrollWidth : C.scrollHeight, w = s ? C.offsetWidth : C.offsetHeight;\n      const g = () => {\n        t({\n          scrollHeight: m,\n          scrollTop: Math.max(I, 0),\n          viewportHeight: w\n        });\n      };\n      p.suppressFlushSync ? g() : react_dom__WEBPACK_IMPORTED_MODULE_2__.flushSync(g), l.current !== null && (I === l.current || I <= 0 || I === m - w) && (l.current = null, e(!0), c.current && (clearTimeout(c.current), c.current = null));\n    },\n    [t, e]\n  );\n  react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n    const p = r || i.current;\n    return o(r || i.current), u({ suppressFlushSync: !0, target: p }), p.addEventListener(\"scroll\", u, { passive: !0 }), () => {\n      o(null), p.removeEventListener(\"scroll\", u);\n    };\n  }, [i, u, n, o, r]);\n  function f(p) {\n    const m = i.current;\n    if (!m || (s ? \"offsetWidth\" in m && m.offsetWidth === 0 : \"offsetHeight\" in m && m.offsetHeight === 0))\n      return;\n    const w = p.behavior === \"smooth\";\n    let I, C, g;\n    Be(m) ? (C = Math.max(\n      wt(m.document.documentElement, s ? \"width\" : \"height\"),\n      s ? m.document.documentElement.scrollWidth : m.document.documentElement.scrollHeight\n    ), I = s ? m.innerWidth : m.innerHeight, g = s ? window.scrollX : window.scrollY) : (C = m[s ? \"scrollWidth\" : \"scrollHeight\"], I = wt(m, s ? \"width\" : \"height\"), g = m[s ? \"scrollLeft\" : \"scrollTop\"]);\n    const a = C - I;\n    if (p.top = Math.ceil(Math.max(Math.min(a, p.top), 0)), Dn(I, C) || p.top === g) {\n      t({ scrollHeight: C, scrollTop: g, viewportHeight: I }), w && e(!0);\n      return;\n    }\n    w ? (l.current = p.top, c.current && clearTimeout(c.current), c.current = setTimeout(() => {\n      c.current = null, l.current = null, e(!0);\n    }, 1e3)) : l.current = null, s && (p = { behavior: p.behavior, left: p.top }), m.scrollTo(p);\n  }\n  function S(p) {\n    s && (p = { behavior: p.behavior, left: p.top }), i.current.scrollBy(p);\n  }\n  return { scrollByCallback: S, scrollerRef: i, scrollToCallback: f };\n}\nconst Oe = \"-webkit-sticky\", xn = \"sticky\", Jn = jn(() => {\n  if (typeof document > \"u\")\n    return xn;\n  const t = document.createElement(\"div\");\n  return t.style.position = Oe, t.style.position === Oe ? Oe : xn;\n});\nfunction Ye(t) {\n  return t;\n}\nconst Qo = /* @__PURE__ */ U(() => {\n  const t = y((c) => `Item ${c}`), e = y(null), n = y((c) => `Group ${c}`), o = y({}), r = y(Ye), s = y(\"div\"), i = y(Yt), l = (c, u = null) => ct(\n    x(\n      o,\n      E((f) => f[c]),\n      Y()\n    ),\n    u\n  );\n  return {\n    components: o,\n    computeItemKey: r,\n    context: e,\n    EmptyPlaceholder: l(\"EmptyPlaceholder\"),\n    FooterComponent: l(\"Footer\"),\n    GroupComponent: l(\"Group\", \"div\"),\n    groupContent: n,\n    HeaderComponent: l(\"Header\"),\n    HeaderFooterTag: s,\n    ItemComponent: l(\"Item\", \"div\"),\n    itemContent: t,\n    ListComponent: l(\"List\", \"div\"),\n    ScrollerComponent: l(\"Scroller\", \"div\"),\n    scrollerRef: i,\n    ScrollSeekPlaceholder: l(\"ScrollSeekPlaceholder\"),\n    TopItemListComponent: l(\"TopItemList\")\n  };\n}), tr = /* @__PURE__ */ U(\n  ([t, e]) => ({ ...t, ...e }),\n  X(qn, Qo)\n), er = ({ height: t }) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { style: { height: t } }), nr = { overflowAnchor: \"none\", position: Jn(), zIndex: 1 }, Qn = { overflowAnchor: \"none\" }, or = { ...Qn, display: \"inline-block\", height: \"100%\" }, Tn = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1__.memo(function({ showTopList: e = !1 }) {\n  const n = M(\"listState\"), o = gt(\"sizeRanges\"), r = M(\"useWindowScroll\"), s = M(\"customScrollParent\"), i = gt(\"windowScrollContainerState\"), l = gt(\"scrollContainerState\"), c = s || r ? i : l, u = M(\"itemContent\"), f = M(\"context\"), S = M(\"groupContent\"), p = M(\"trackItemSizes\"), m = M(\"itemSize\"), w = M(\"log\"), I = gt(\"gap\"), C = M(\"horizontalDirection\"), { callbackRef: g } = On(\n    o,\n    m,\n    p,\n    e ? Yt : c,\n    w,\n    I,\n    s,\n    C,\n    M(\"skipAnimationFrameInResizeObserver\")\n  ), [a, T] = react__WEBPACK_IMPORTED_MODULE_1__.useState(0);\n  Je(\"deviation\", (k) => {\n    a !== k && T(k);\n  });\n  const b = M(\"EmptyPlaceholder\"), h = M(\"ScrollSeekPlaceholder\") || er, d = M(\"ListComponent\"), R = M(\"ItemComponent\"), B = M(\"GroupComponent\"), O = M(\"computeItemKey\"), L = M(\"isSeeking\"), V = M(\"groupIndices\").length > 0, D = M(\"alignToBottom\"), J = M(\"initialItemFinalLocationReached\"), nt = e ? {} : {\n    boxSizing: \"border-box\",\n    ...C ? {\n      display: \"inline-block\",\n      height: \"100%\",\n      marginLeft: a !== 0 ? a : D ? \"auto\" : 0,\n      paddingLeft: n.offsetTop,\n      paddingRight: n.offsetBottom,\n      whiteSpace: \"nowrap\"\n    } : {\n      marginTop: a !== 0 ? a : D ? \"auto\" : 0,\n      paddingBottom: n.offsetBottom,\n      paddingTop: n.offsetTop\n    },\n    ...J ? {} : { visibility: \"hidden\" }\n  };\n  return !e && n.totalCount === 0 && b ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(b, { ...Z(b, f) }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    d,\n    {\n      ...Z(d, f),\n      \"data-testid\": e ? \"virtuoso-top-item-list\" : \"virtuoso-item-list\",\n      ref: g,\n      style: nt,\n      children: (e ? n.topItems : n.items).map((k) => {\n        const q = k.originalIndex, st = O(q + n.firstItemIndex, k.data, f);\n        return L ? /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(\n          h,\n          {\n            ...Z(h, f),\n            height: k.size,\n            index: k.index,\n            key: st,\n            type: k.type || \"item\",\n            ...k.type === \"group\" ? {} : { groupIndex: k.groupIndex }\n          }\n        ) : k.type === \"group\" ? /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(\n          B,\n          {\n            ...Z(B, f),\n            \"data-index\": q,\n            \"data-item-index\": k.index,\n            \"data-known-size\": k.size,\n            key: st,\n            style: nr\n          },\n          S(k.index, f)\n        ) : /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(\n          R,\n          {\n            ...Z(R, f),\n            ...to(R, k.data),\n            \"data-index\": q,\n            \"data-item-group-index\": k.groupIndex,\n            \"data-item-index\": k.index,\n            \"data-known-size\": k.size,\n            key: st,\n            style: C ? or : Qn\n          },\n          V ? u(k.index, k.groupIndex, k.data, f) : u(k.index, k.data, f)\n        );\n      })\n    }\n  );\n}), rr = {\n  height: \"100%\",\n  outline: \"none\",\n  overflowY: \"auto\",\n  position: \"relative\",\n  WebkitOverflowScrolling: \"touch\"\n}, sr = {\n  outline: \"none\",\n  overflowX: \"auto\",\n  position: \"relative\"\n}, Zt = (t) => ({\n  height: \"100%\",\n  position: \"absolute\",\n  top: 0,\n  width: \"100%\",\n  ...t ? { display: \"flex\", flexDirection: \"column\" } : {}\n}), ir = {\n  position: Jn(),\n  top: 0,\n  width: \"100%\",\n  zIndex: 1\n};\nfunction Z(t, e) {\n  if (typeof t != \"string\")\n    return { context: e };\n}\nfunction to(t, e) {\n  return { item: typeof t == \"string\" ? void 0 : e };\n}\nconst lr = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1__.memo(function() {\n  const e = M(\"HeaderComponent\"), n = gt(\"headerHeight\"), o = M(\"HeaderFooterTag\"), r = Ht(\n    react__WEBPACK_IMPORTED_MODULE_1__.useMemo(\n      () => (i) => {\n        n(wt(i, \"height\"));\n      },\n      [n]\n    ),\n    !0,\n    M(\"skipAnimationFrameInResizeObserver\")\n  ), s = M(\"context\");\n  return e ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(o, { ref: r, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(e, { ...Z(e, s) }) }) : null;\n}), cr = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1__.memo(function() {\n  const e = M(\"FooterComponent\"), n = gt(\"footerHeight\"), o = M(\"HeaderFooterTag\"), r = Ht(\n    react__WEBPACK_IMPORTED_MODULE_1__.useMemo(\n      () => (i) => {\n        n(wt(i, \"height\"));\n      },\n      [n]\n    ),\n    !0,\n    M(\"skipAnimationFrameInResizeObserver\")\n  ), s = M(\"context\");\n  return e ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(o, { ref: r, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(e, { ...Z(e, s) }) }) : null;\n});\nfunction Ze({ useEmitter: t, useEmitterValue: e, usePublisher: n }) {\n  return react__WEBPACK_IMPORTED_MODULE_1__.memo(function({ children: s, style: i, ...l }) {\n    const c = n(\"scrollContainerState\"), u = e(\"ScrollerComponent\"), f = n(\"smoothScrollTargetReached\"), S = e(\"scrollerRef\"), p = e(\"context\"), m = e(\"horizontalDirection\") || !1, { scrollByCallback: w, scrollerRef: I, scrollToCallback: C } = Xn(\n      c,\n      f,\n      u,\n      S,\n      void 0,\n      m\n    );\n    return t(\"scrollTo\", C), t(\"scrollBy\", w), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      u,\n      {\n        \"data-testid\": \"virtuoso-scroller\",\n        \"data-virtuoso-scroller\": !0,\n        ref: I,\n        style: { ...m ? sr : rr, ...i },\n        tabIndex: 0,\n        ...l,\n        ...Z(u, p),\n        children: s\n      }\n    );\n  });\n}\nfunction Xe({ useEmitter: t, useEmitterValue: e, usePublisher: n }) {\n  return react__WEBPACK_IMPORTED_MODULE_1__.memo(function({ children: s, style: i, ...l }) {\n    const c = n(\"windowScrollContainerState\"), u = e(\"ScrollerComponent\"), f = n(\"smoothScrollTargetReached\"), S = e(\"totalListHeight\"), p = e(\"deviation\"), m = e(\"customScrollParent\"), w = e(\"context\"), I = react__WEBPACK_IMPORTED_MODULE_1__.useRef(null), C = e(\"scrollerRef\"), { scrollByCallback: g, scrollerRef: a, scrollToCallback: T } = Xn(\n      c,\n      f,\n      u,\n      C,\n      m\n    );\n    return Zn(() => {\n      var b;\n      return a.current = m || ((b = I.current) == null ? void 0 : b.ownerDocument.defaultView), () => {\n        a.current = null;\n      };\n    }, [a, m]), t(\"windowScrollTo\", T), t(\"scrollBy\", g), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      u,\n      {\n        ref: I,\n        \"data-virtuoso-scroller\": !0,\n        style: { position: \"relative\", ...i, ...S !== 0 ? { height: S + p } : {} },\n        ...l,\n        ...Z(u, w),\n        children: s\n      }\n    );\n  });\n}\nconst ur = ({ children: t }) => {\n  const e = react__WEBPACK_IMPORTED_MODULE_1__.useContext(Re), n = gt(\"viewportHeight\"), o = gt(\"fixedItemHeight\"), r = M(\"alignToBottom\"), s = M(\"horizontalDirection\"), i = react__WEBPACK_IMPORTED_MODULE_1__.useMemo(\n    () => ne(n, (c) => wt(c, s ? \"width\" : \"height\")),\n    [n, s]\n  ), l = Ht(i, !0, M(\"skipAnimationFrameInResizeObserver\"));\n  return react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n    e && (n(e.viewportHeight), o(e.itemHeight));\n  }, [e, n, o]), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { \"data-viewport-type\": \"element\", ref: l, style: Zt(r), children: t });\n}, ar = ({ children: t }) => {\n  const e = react__WEBPACK_IMPORTED_MODULE_1__.useContext(Re), n = gt(\"windowViewportRect\"), o = gt(\"fixedItemHeight\"), r = M(\"customScrollParent\"), s = Ge(\n    n,\n    r,\n    M(\"skipAnimationFrameInResizeObserver\")\n  ), i = M(\"alignToBottom\");\n  return react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n    e && (o(e.itemHeight), n({ offsetTop: 0, visibleHeight: e.viewportHeight, visibleWidth: 100 }));\n  }, [e, n, o]), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { \"data-viewport-type\": \"window\", ref: s, style: Zt(i), children: t });\n}, dr = ({ children: t }) => {\n  const e = M(\"TopItemListComponent\") || \"div\", n = M(\"headerHeight\"), o = { ...ir, marginTop: `${n}px` }, r = M(\"context\");\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(e, { style: o, ...Z(e, r), children: t });\n}, fr = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1__.memo(function(e) {\n  const n = M(\"useWindowScroll\"), o = M(\"topItemsIndexes\").length > 0, r = M(\"customScrollParent\"), s = M(\"context\"), i = r || n ? pr : mr, l = r || n ? ar : ur;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(i, { ...e, ...Z(i, s), children: [\n    o && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(dr, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Tn, { showTopList: !0 }) }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(l, { children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(lr, {}),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Tn, {}),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(cr, {})\n    ] })\n  ] });\n}), {\n  Component: eo,\n  useEmitter: Je,\n  useEmitterValue: M,\n  usePublisher: gt\n} = /* @__PURE__ */ qe(\n  tr,\n  {\n    events: {\n      atBottomStateChange: \"atBottomStateChange\",\n      atTopStateChange: \"atTopStateChange\",\n      endReached: \"endReached\",\n      groupIndices: \"groupIndices\",\n      isScrolling: \"isScrolling\",\n      itemsRendered: \"itemsRendered\",\n      rangeChanged: \"rangeChanged\",\n      startReached: \"startReached\",\n      totalListHeightChanged: \"totalListHeightChanged\"\n    },\n    methods: {\n      autoscrollToBottom: \"autoscrollToBottom\",\n      getState: \"getState\",\n      scrollBy: \"scrollBy\",\n      scrollIntoView: \"scrollIntoView\",\n      scrollTo: \"scrollTo\",\n      scrollToIndex: \"scrollToIndex\"\n    },\n    optional: {\n      alignToBottom: \"alignToBottom\",\n      atBottomThreshold: \"atBottomThreshold\",\n      atTopThreshold: \"atTopThreshold\",\n      components: \"components\",\n      computeItemKey: \"computeItemKey\",\n      context: \"context\",\n      customScrollParent: \"customScrollParent\",\n      data: \"data\",\n      defaultItemHeight: \"defaultItemHeight\",\n      firstItemIndex: \"firstItemIndex\",\n      fixedItemHeight: \"fixedItemHeight\",\n      followOutput: \"followOutput\",\n      groupContent: \"groupContent\",\n      groupCounts: \"groupCounts\",\n      headerFooterTag: \"HeaderFooterTag\",\n      horizontalDirection: \"horizontalDirection\",\n      increaseViewportBy: \"increaseViewportBy\",\n      initialItemCount: \"initialItemCount\",\n      initialScrollTop: \"initialScrollTop\",\n      initialTopMostItemIndex: \"initialTopMostItemIndex\",\n      itemContent: \"itemContent\",\n      itemSize: \"itemSize\",\n      logLevel: \"logLevel\",\n      overscan: \"overscan\",\n      restoreStateFrom: \"restoreStateFrom\",\n      scrollerRef: \"scrollerRef\",\n      scrollSeekConfiguration: \"scrollSeekConfiguration\",\n      skipAnimationFrameInResizeObserver: \"skipAnimationFrameInResizeObserver\",\n      topItemCount: \"topItemCount\",\n      totalCount: \"totalCount\",\n      useWindowScroll: \"useWindowScroll\"\n    },\n    required: {}\n  },\n  fr\n), mr = /* @__PURE__ */ Ze({ useEmitter: Je, useEmitterValue: M, usePublisher: gt }), pr = /* @__PURE__ */ Xe({ useEmitter: Je, useEmitterValue: M, usePublisher: gt }), Kr = eo, jr = eo, hr = /* @__PURE__ */ U(() => {\n  const t = y((c) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"td\", { children: [\n    \"Item $\",\n    c\n  ] })), e = y(null), n = y(null), o = y(null), r = y({}), s = y(Ye), i = y(Yt), l = (c, u = null) => ct(\n    x(\n      r,\n      E((f) => f[c]),\n      Y()\n    ),\n    u\n  );\n  return {\n    components: r,\n    computeItemKey: s,\n    context: e,\n    EmptyPlaceholder: l(\"EmptyPlaceholder\"),\n    FillerRow: l(\"FillerRow\"),\n    fixedFooterContent: o,\n    fixedHeaderContent: n,\n    itemContent: t,\n    ScrollerComponent: l(\"Scroller\", \"div\"),\n    scrollerRef: i,\n    ScrollSeekPlaceholder: l(\"ScrollSeekPlaceholder\"),\n    TableBodyComponent: l(\"TableBody\", \"tbody\"),\n    TableComponent: l(\"Table\", \"table\"),\n    TableFooterComponent: l(\"TableFoot\", \"tfoot\"),\n    TableHeadComponent: l(\"TableHead\", \"thead\"),\n    TableRowComponent: l(\"TableRow\", \"tr\")\n  };\n}), gr = /* @__PURE__ */ U(\n  ([t, e]) => ({ ...t, ...e }),\n  X(qn, hr)\n), Ir = ({ height: t }) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"tr\", { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"td\", { style: { height: t } }) }), Sr = ({ height: t }) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"tr\", { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"td\", { style: { border: 0, height: t, padding: 0 } }) }), xr = { overflowAnchor: \"none\" }, Cn = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1__.memo(function({ showTopList: e = !1 }) {\n  const n = _(\"listState\"), o = _(\"computeItemKey\"), r = _(\"firstItemIndex\"), s = _(\"isSeeking\"), i = _(\"ScrollSeekPlaceholder\") || Ir, l = _(\"context\"), c = _(\"TableRowComponent\"), u = _(\"fixedHeaderHeight\"), f = _(\"itemContent\"), S = (e ? n.topItems : []).reduce((m, w, I) => (I === 0 ? m.push(w.size) : m.push(m[I - 1] + w.size), m), []), p = (e ? n.topItems : n.items).map((m) => {\n    const w = m.originalIndex, I = o(w + r, m.data, l), C = e ? w === 0 ? 0 : S[w - 1] : 0;\n    return s ? /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(\n      i,\n      {\n        ...Z(i, l),\n        height: m.size,\n        index: m.index,\n        key: I,\n        type: m.type || \"item\"\n      }\n    ) : /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(\n      c,\n      {\n        ...Z(c, l),\n        ...to(c, m.data),\n        \"data-index\": w,\n        \"data-item-index\": m.index,\n        \"data-known-size\": m.size,\n        key: I,\n        style: e ? { overflowAnchor: \"none\", position: \"sticky\", top: u + C, zIndex: 2 } : xr\n      },\n      f(m.index, m.data, l)\n    );\n  });\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: p });\n}), Tr = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1__.memo(function() {\n  const e = _(\"listState\"), n = _(\"topItemsIndexes\").length > 0, o = Tt(\"sizeRanges\"), r = _(\"useWindowScroll\"), s = _(\"customScrollParent\"), i = Tt(\"windowScrollContainerState\"), l = Tt(\"scrollContainerState\"), c = s || r ? i : l, u = _(\"trackItemSizes\"), f = _(\"itemSize\"), S = _(\"log\"), { callbackRef: p, ref: m } = On(\n    o,\n    f,\n    u,\n    c,\n    S,\n    void 0,\n    s,\n    !1,\n    _(\"skipAnimationFrameInResizeObserver\")\n  ), [w, I] = react__WEBPACK_IMPORTED_MODULE_1__.useState(0);\n  Qe(\"deviation\", (V) => {\n    w !== V && (m.current.style.marginTop = `${V}px`, I(V));\n  });\n  const C = _(\"EmptyPlaceholder\"), g = _(\"FillerRow\") || Sr, a = _(\"TableBodyComponent\"), T = _(\"paddingTopAddition\"), b = _(\"statefulTotalCount\"), h = _(\"context\");\n  if (b === 0 && C)\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(C, { ...Z(C, h) });\n  const d = (n ? e.topItems : []).reduce((V, D) => V + D.size, 0), R = e.offsetTop + T + w - d, B = e.offsetBottom, O = R > 0 ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(g, { context: h, height: R }, \"padding-top\") : null, L = B > 0 ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(g, { context: h, height: B }, \"padding-bottom\") : null;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(a, { \"data-testid\": \"virtuoso-item-list\", ref: p, ...Z(a, h), children: [\n    O,\n    n && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Cn, { showTopList: !0 }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Cn, {}),\n    L\n  ] });\n}), Cr = ({ children: t }) => {\n  const e = react__WEBPACK_IMPORTED_MODULE_1__.useContext(Re), n = Tt(\"viewportHeight\"), o = Tt(\"fixedItemHeight\"), r = Ht(\n    react__WEBPACK_IMPORTED_MODULE_1__.useMemo(() => ne(n, (s) => wt(s, \"height\")), [n]),\n    !0,\n    _(\"skipAnimationFrameInResizeObserver\")\n  );\n  return react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n    e && (n(e.viewportHeight), o(e.itemHeight));\n  }, [e, n, o]), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { \"data-viewport-type\": \"element\", ref: r, style: Zt(!1), children: t });\n}, wr = ({ children: t }) => {\n  const e = react__WEBPACK_IMPORTED_MODULE_1__.useContext(Re), n = Tt(\"windowViewportRect\"), o = Tt(\"fixedItemHeight\"), r = _(\"customScrollParent\"), s = Ge(\n    n,\n    r,\n    _(\"skipAnimationFrameInResizeObserver\")\n  );\n  return react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n    e && (o(e.itemHeight), n({ offsetTop: 0, visibleHeight: e.viewportHeight, visibleWidth: 100 }));\n  }, [e, n, o]), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { \"data-viewport-type\": \"window\", ref: s, style: Zt(!1), children: t });\n}, yr = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1__.memo(function(e) {\n  const n = _(\"useWindowScroll\"), o = _(\"customScrollParent\"), r = Tt(\"fixedHeaderHeight\"), s = Tt(\"fixedFooterHeight\"), i = _(\"fixedHeaderContent\"), l = _(\"fixedFooterContent\"), c = _(\"context\"), u = Ht(\n    react__WEBPACK_IMPORTED_MODULE_1__.useMemo(() => ne(r, (a) => wt(a, \"height\")), [r]),\n    !0,\n    _(\"skipAnimationFrameInResizeObserver\")\n  ), f = Ht(\n    react__WEBPACK_IMPORTED_MODULE_1__.useMemo(() => ne(s, (a) => wt(a, \"height\")), [s]),\n    !0,\n    _(\"skipAnimationFrameInResizeObserver\")\n  ), S = o || n ? Rr : br, p = o || n ? wr : Cr, m = _(\"TableComponent\"), w = _(\"TableHeadComponent\"), I = _(\"TableFooterComponent\"), C = i ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    w,\n    {\n      ref: u,\n      style: { position: \"sticky\", top: 0, zIndex: 2 },\n      ...Z(w, c),\n      children: i()\n    },\n    \"TableHead\"\n  ) : null, g = l ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    I,\n    {\n      ref: f,\n      style: { bottom: 0, position: \"sticky\", zIndex: 1 },\n      ...Z(I, c),\n      children: l()\n    },\n    \"TableFoot\"\n  ) : null;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(S, { ...e, ...Z(S, c), children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(p, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(m, { style: { borderSpacing: 0, overflowAnchor: \"none\" }, ...Z(m, c), children: [\n    C,\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Tr, {}, \"TableBody\"),\n    g\n  ] }) }) });\n}), {\n  Component: vr,\n  useEmitter: Qe,\n  useEmitterValue: _,\n  usePublisher: Tt\n} = /* @__PURE__ */ qe(\n  gr,\n  {\n    events: {\n      atBottomStateChange: \"atBottomStateChange\",\n      atTopStateChange: \"atTopStateChange\",\n      endReached: \"endReached\",\n      groupIndices: \"groupIndices\",\n      isScrolling: \"isScrolling\",\n      itemsRendered: \"itemsRendered\",\n      rangeChanged: \"rangeChanged\",\n      startReached: \"startReached\",\n      totalListHeightChanged: \"totalListHeightChanged\"\n    },\n    methods: {\n      getState: \"getState\",\n      scrollBy: \"scrollBy\",\n      scrollIntoView: \"scrollIntoView\",\n      scrollTo: \"scrollTo\",\n      scrollToIndex: \"scrollToIndex\"\n    },\n    optional: {\n      alignToBottom: \"alignToBottom\",\n      atBottomThreshold: \"atBottomThreshold\",\n      atTopThreshold: \"atTopThreshold\",\n      components: \"components\",\n      computeItemKey: \"computeItemKey\",\n      context: \"context\",\n      customScrollParent: \"customScrollParent\",\n      data: \"data\",\n      defaultItemHeight: \"defaultItemHeight\",\n      firstItemIndex: \"firstItemIndex\",\n      fixedFooterContent: \"fixedFooterContent\",\n      fixedHeaderContent: \"fixedHeaderContent\",\n      fixedItemHeight: \"fixedItemHeight\",\n      followOutput: \"followOutput\",\n      groupCounts: \"groupCounts\",\n      increaseViewportBy: \"increaseViewportBy\",\n      initialItemCount: \"initialItemCount\",\n      initialScrollTop: \"initialScrollTop\",\n      initialTopMostItemIndex: \"initialTopMostItemIndex\",\n      itemContent: \"itemContent\",\n      itemSize: \"itemSize\",\n      logLevel: \"logLevel\",\n      overscan: \"overscan\",\n      restoreStateFrom: \"restoreStateFrom\",\n      scrollerRef: \"scrollerRef\",\n      scrollSeekConfiguration: \"scrollSeekConfiguration\",\n      topItemCount: \"topItemCount\",\n      totalCount: \"totalCount\",\n      useWindowScroll: \"useWindowScroll\"\n    },\n    required: {}\n  },\n  yr\n), br = /* @__PURE__ */ Ze({ useEmitter: Qe, useEmitterValue: _, usePublisher: Tt }), Rr = /* @__PURE__ */ Xe({ useEmitter: Qe, useEmitterValue: _, usePublisher: Tt }), qr = vr, wn = {\n  bottom: 0,\n  itemHeight: 0,\n  items: [],\n  itemWidth: 0,\n  offsetBottom: 0,\n  offsetTop: 0,\n  top: 0\n}, Hr = {\n  bottom: 0,\n  itemHeight: 0,\n  items: [{ index: 0 }],\n  itemWidth: 0,\n  offsetBottom: 0,\n  offsetTop: 0,\n  top: 0\n}, { ceil: yn, floor: Ce, max: ee, min: Fe, round: vn } = Math;\nfunction bn(t, e, n) {\n  return Array.from({ length: e - t + 1 }).map((o, r) => ({ data: n === null ? null : n[r + t], index: r + t }));\n}\nfunction Er(t) {\n  return {\n    ...Hr,\n    items: t\n  };\n}\nfunction he(t, e) {\n  return t && t.width === e.width && t.height === e.height;\n}\nfunction kr(t, e) {\n  return t && t.column === e.column && t.row === e.row;\n}\nconst Br = /* @__PURE__ */ U(\n  ([\n    { increaseViewportBy: t, listBoundary: e, overscan: n, visibleRange: o },\n    { footerHeight: r, headerHeight: s, scrollBy: i, scrollContainerState: l, scrollTo: c, scrollTop: u, smoothScrollTargetReached: f, viewportHeight: S },\n    p,\n    m,\n    { didMount: w, propsReady: I },\n    { customScrollParent: C, useWindowScroll: g, windowScrollContainerState: a, windowScrollTo: T, windowViewportRect: b },\n    h\n  ]) => {\n    const d = y(0), R = y(0), B = y(wn), O = y({ height: 0, width: 0 }), L = y({ height: 0, width: 0 }), V = $(), D = $(), J = y(0), nt = y(null), k = y({ column: 0, row: 0 }), q = $(), st = $(), dt = y(!1), St = y(0), ft = y(!0), ut = y(!1), At = y(!1);\n    K(\n      x(\n        w,\n        G(St),\n        P(([v, N]) => !!N)\n      ),\n      () => {\n        W(ft, !1);\n      }\n    ), K(\n      x(\n        rt(w, ft, L, O, St, ut),\n        P(([v, N, Q, it, , tt]) => v && !N && Q.height !== 0 && it.height !== 0 && !tt)\n      ),\n      ([, , , , v]) => {\n        W(ut, !0), $e(1, () => {\n          W(V, v);\n        }), Rt(x(u), () => {\n          W(e, [0, 0]), W(ft, !0);\n        });\n      }\n    ), F(\n      x(\n        st,\n        P((v) => v != null && v.scrollTop > 0),\n        vt(0)\n      ),\n      R\n    ), K(\n      x(\n        w,\n        G(st),\n        P(([, v]) => v != null)\n      ),\n      ([, v]) => {\n        v && (W(O, v.viewport), W(L, v.item), W(k, v.gap), v.scrollTop > 0 && (W(dt, !0), Rt(x(u, jt(1)), (N) => {\n          W(dt, !1);\n        }), W(c, { top: v.scrollTop })));\n      }\n    ), F(\n      x(\n        O,\n        E(({ height: v }) => v)\n      ),\n      S\n    ), F(\n      x(\n        rt(\n          A(O, he),\n          A(L, he),\n          A(k, (v, N) => v && v.column === N.column && v.row === N.row),\n          A(u)\n        ),\n        E(([v, N, Q, it]) => ({\n          gap: Q,\n          item: N,\n          scrollTop: it,\n          viewport: v\n        }))\n      ),\n      q\n    ), F(\n      x(\n        rt(\n          A(d),\n          o,\n          A(k, kr),\n          A(L, he),\n          A(O, he),\n          A(nt),\n          A(R),\n          A(dt),\n          A(ft),\n          A(St)\n        ),\n        P(([, , , , , , , v]) => !v),\n        E(\n          ([\n            v,\n            [N, Q],\n            it,\n            tt,\n            Bt,\n            Jt,\n            Nt,\n            ,\n            de,\n            Ot\n          ]) => {\n            const { column: Ft, row: Qt } = it, { height: fe, width: He } = tt, { width: tn } = Bt;\n            if (Nt === 0 && (v === 0 || tn === 0))\n              return wn;\n            if (He === 0) {\n              const sn = Ue(Ot, v), so = sn + Math.max(Nt - 1, 0);\n              return Er(bn(sn, so, Jt));\n            }\n            const me = no(tn, He, Ft);\n            let Dt, Wt;\n            de ? N === 0 && Q === 0 && Nt > 0 ? (Dt = 0, Wt = Nt - 1) : (Dt = me * Ce((N + Qt) / (fe + Qt)), Wt = me * yn((Q + Qt) / (fe + Qt)) - 1, Wt = Fe(v - 1, ee(Wt, me - 1)), Dt = Fe(Wt, ee(0, Dt))) : (Dt = 0, Wt = -1);\n            const en = bn(Dt, Wt, Jt), { bottom: nn, top: on } = Rn(Bt, it, tt, en), rn = yn(v / me), ro = rn * fe + (rn - 1) * Qt - nn;\n            return { bottom: nn, itemHeight: fe, items: en, itemWidth: He, offsetBottom: ro, offsetTop: on, top: on };\n          }\n        )\n      ),\n      B\n    ), F(\n      x(\n        nt,\n        P((v) => v !== null),\n        E((v) => v.length)\n      ),\n      d\n    ), F(\n      x(\n        rt(O, L, B, k),\n        P(([v, N, { items: Q }]) => Q.length > 0 && N.height !== 0 && v.height !== 0),\n        E(([v, N, { items: Q }, it]) => {\n          const { bottom: tt, top: Bt } = Rn(v, it, N, Q);\n          return [Bt, tt];\n        }),\n        Y(se)\n      ),\n      e\n    );\n    const xt = y(!1);\n    F(\n      x(\n        u,\n        G(xt),\n        E(([v, N]) => N || v !== 0)\n      ),\n      xt\n    );\n    const Xt = pt(\n      x(\n        rt(B, d),\n        P(([{ items: v }]) => v.length > 0),\n        G(xt),\n        P(([[v, N], Q]) => {\n          const tt = v.items[v.items.length - 1].index === N - 1;\n          return (Q || v.bottom > 0 && v.itemHeight > 0 && v.offsetBottom === 0 && v.items.length === N) && tt;\n        }),\n        E(([[, v]]) => v - 1),\n        Y()\n      )\n    ), Mt = pt(\n      x(\n        A(B),\n        P(({ items: v }) => v.length > 0 && v[0].index === 0),\n        vt(0),\n        Y()\n      )\n    ), yt = pt(\n      x(\n        A(B),\n        G(dt),\n        P(([{ items: v }, N]) => v.length > 0 && !N),\n        E(([{ items: v }]) => ({\n          endIndex: v[v.length - 1].index,\n          startIndex: v[0].index\n        })),\n        Y(An),\n        Lt(0)\n      )\n    );\n    F(yt, m.scrollSeekRangeChanged), F(\n      x(\n        V,\n        G(O, L, d, k),\n        E(([v, N, Q, it, tt]) => {\n          const Bt = Nn(v), { align: Jt, behavior: Nt, offset: de } = Bt;\n          let Ot = Bt.index;\n          Ot === \"LAST\" && (Ot = it - 1), Ot = ee(0, Ot, Fe(it - 1, Ot));\n          let Ft = Ae(N, tt, Q, Ot);\n          return Jt === \"end\" ? Ft = vn(Ft - N.height + Q.height) : Jt === \"center\" && (Ft = vn(Ft - N.height / 2 + Q.height / 2)), de && (Ft += de), { behavior: Nt, top: Ft };\n        })\n      ),\n      c\n    );\n    const kt = ct(\n      x(\n        B,\n        E((v) => v.offsetBottom + v.bottom)\n      ),\n      0\n    );\n    return F(\n      x(\n        b,\n        E((v) => ({ height: v.visibleHeight, width: v.visibleWidth }))\n      ),\n      O\n    ), {\n      customScrollParent: C,\n      // input\n      data: nt,\n      deviation: J,\n      footerHeight: r,\n      gap: k,\n      headerHeight: s,\n      increaseViewportBy: t,\n      initialItemCount: R,\n      itemDimensions: L,\n      overscan: n,\n      restoreStateFrom: st,\n      scrollBy: i,\n      scrollContainerState: l,\n      scrollHeight: D,\n      scrollTo: c,\n      scrollToIndex: V,\n      scrollTop: u,\n      smoothScrollTargetReached: f,\n      totalCount: d,\n      useWindowScroll: g,\n      viewportDimensions: O,\n      windowScrollContainerState: a,\n      windowScrollTo: T,\n      windowViewportRect: b,\n      ...m,\n      // output\n      gridState: B,\n      horizontalDirection: At,\n      initialTopMostItemIndex: St,\n      totalListHeight: kt,\n      ...p,\n      endReached: Xt,\n      propsReady: I,\n      rangeChanged: yt,\n      startReached: Mt,\n      stateChanged: q,\n      stateRestoreInProgress: dt,\n      ...h\n    };\n  },\n  X(Ke, at, ae, Kn, Pt, je, Vt)\n);\nfunction no(t, e, n) {\n  return ee(1, Ce((t + n) / (Ce(e) + n)));\n}\nfunction Rn(t, e, n, o) {\n  const { height: r } = n;\n  if (r === void 0 || o.length === 0)\n    return { bottom: 0, top: 0 };\n  const s = Ae(t, e, n, o[0].index);\n  return { bottom: Ae(t, e, n, o[o.length - 1].index) + r, top: s };\n}\nfunction Ae(t, e, n, o) {\n  const r = no(t.width, n.width, e.column), s = Ce(o / r), i = s * n.height + ee(0, s - 1) * e.row;\n  return i > 0 ? i + e.row : i;\n}\nconst Or = /* @__PURE__ */ U(() => {\n  const t = y((S) => `Item ${S}`), e = y({}), n = y(null), o = y(\"virtuoso-grid-item\"), r = y(\"virtuoso-grid-list\"), s = y(Ye), i = y(\"div\"), l = y(Yt), c = (S, p = null) => ct(\n    x(\n      e,\n      E((m) => m[S]),\n      Y()\n    ),\n    p\n  ), u = y(!1), f = y(!1);\n  return F(A(f), u), {\n    components: e,\n    computeItemKey: s,\n    context: n,\n    FooterComponent: c(\"Footer\"),\n    HeaderComponent: c(\"Header\"),\n    headerFooterTag: i,\n    itemClassName: o,\n    ItemComponent: c(\"Item\", \"div\"),\n    itemContent: t,\n    listClassName: r,\n    ListComponent: c(\"List\", \"div\"),\n    readyStateChanged: u,\n    reportReadyState: f,\n    ScrollerComponent: c(\"Scroller\", \"div\"),\n    scrollerRef: l,\n    ScrollSeekPlaceholder: c(\"ScrollSeekPlaceholder\", \"div\")\n  };\n}), Fr = /* @__PURE__ */ U(\n  ([t, e]) => ({ ...t, ...e }),\n  X(Br, Or)\n), Lr = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1__.memo(function() {\n  const e = et(\"gridState\"), n = et(\"listClassName\"), o = et(\"itemClassName\"), r = et(\"itemContent\"), s = et(\"computeItemKey\"), i = et(\"isSeeking\"), l = It(\"scrollHeight\"), c = et(\"ItemComponent\"), u = et(\"ListComponent\"), f = et(\"ScrollSeekPlaceholder\"), S = et(\"context\"), p = It(\"itemDimensions\"), m = It(\"gap\"), w = et(\"log\"), I = et(\"stateRestoreInProgress\"), C = It(\"reportReadyState\"), g = Ht(\n    react__WEBPACK_IMPORTED_MODULE_1__.useMemo(\n      () => (a) => {\n        const T = a.parentElement.parentElement.scrollHeight;\n        l(T);\n        const b = a.firstChild;\n        if (b) {\n          const { height: h, width: d } = b.getBoundingClientRect();\n          p({ height: h, width: d });\n        }\n        m({\n          column: Hn(\"column-gap\", getComputedStyle(a).columnGap, w),\n          row: Hn(\"row-gap\", getComputedStyle(a).rowGap, w)\n        });\n      },\n      [l, p, m, w]\n    ),\n    !0,\n    !1\n  );\n  return Zn(() => {\n    e.itemHeight > 0 && e.itemWidth > 0 && C(!0);\n  }, [e]), I ? null : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    u,\n    {\n      className: n,\n      ref: g,\n      ...Z(u, S),\n      \"data-testid\": \"virtuoso-item-list\",\n      style: { paddingBottom: e.offsetBottom, paddingTop: e.offsetTop },\n      children: e.items.map((a) => {\n        const T = s(a.index, a.data, S);\n        return i ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          f,\n          {\n            ...Z(f, S),\n            height: e.itemHeight,\n            index: a.index,\n            width: e.itemWidth\n          },\n          T\n        ) : /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(\n          c,\n          {\n            ...Z(c, S),\n            className: o,\n            \"data-index\": a.index,\n            key: T\n          },\n          r(a.index, a.data, S)\n        );\n      })\n    }\n  );\n}), zr = react__WEBPACK_IMPORTED_MODULE_1__.memo(function() {\n  const e = et(\"HeaderComponent\"), n = It(\"headerHeight\"), o = et(\"headerFooterTag\"), r = Ht(\n    react__WEBPACK_IMPORTED_MODULE_1__.useMemo(\n      () => (i) => {\n        n(wt(i, \"height\"));\n      },\n      [n]\n    ),\n    !0,\n    !1\n  ), s = et(\"context\");\n  return e ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(o, { ref: r, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(e, { ...Z(e, s) }) }) : null;\n}), Vr = react__WEBPACK_IMPORTED_MODULE_1__.memo(function() {\n  const e = et(\"FooterComponent\"), n = It(\"footerHeight\"), o = et(\"headerFooterTag\"), r = Ht(\n    react__WEBPACK_IMPORTED_MODULE_1__.useMemo(\n      () => (i) => {\n        n(wt(i, \"height\"));\n      },\n      [n]\n    ),\n    !0,\n    !1\n  ), s = et(\"context\");\n  return e ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(o, { ref: r, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(e, { ...Z(e, s) }) }) : null;\n}), Pr = ({ children: t }) => {\n  const e = react__WEBPACK_IMPORTED_MODULE_1__.useContext(Yn), n = It(\"itemDimensions\"), o = It(\"viewportDimensions\"), r = Ht(\n    react__WEBPACK_IMPORTED_MODULE_1__.useMemo(\n      () => (s) => {\n        o(s.getBoundingClientRect());\n      },\n      [o]\n    ),\n    !0,\n    !1\n  );\n  return react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n    e && (o({ height: e.viewportHeight, width: e.viewportWidth }), n({ height: e.itemHeight, width: e.itemWidth }));\n  }, [e, o, n]), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { ref: r, style: Zt(!1), children: t });\n}, Ar = ({ children: t }) => {\n  const e = react__WEBPACK_IMPORTED_MODULE_1__.useContext(Yn), n = It(\"windowViewportRect\"), o = It(\"itemDimensions\"), r = et(\"customScrollParent\"), s = Ge(n, r, !1);\n  return react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n    e && (o({ height: e.itemHeight, width: e.itemWidth }), n({ offsetTop: 0, visibleHeight: e.viewportHeight, visibleWidth: e.viewportWidth }));\n  }, [e, n, o]), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { ref: s, style: Zt(!1), children: t });\n}, Mr = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1__.memo(function({ ...e }) {\n  const n = et(\"useWindowScroll\"), o = et(\"customScrollParent\"), r = o || n ? Gr : _r, s = o || n ? Ar : Pr, i = et(\"context\");\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(r, { ...e, ...Z(r, i), children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(s, { children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(zr, {}),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Lr, {}),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Vr, {})\n  ] }) });\n}), {\n  Component: Wr,\n  useEmitter: oo,\n  useEmitterValue: et,\n  usePublisher: It\n} = /* @__PURE__ */ qe(\n  Fr,\n  {\n    events: {\n      atBottomStateChange: \"atBottomStateChange\",\n      atTopStateChange: \"atTopStateChange\",\n      endReached: \"endReached\",\n      isScrolling: \"isScrolling\",\n      rangeChanged: \"rangeChanged\",\n      readyStateChanged: \"readyStateChanged\",\n      startReached: \"startReached\",\n      stateChanged: \"stateChanged\"\n    },\n    methods: {\n      scrollBy: \"scrollBy\",\n      scrollTo: \"scrollTo\",\n      scrollToIndex: \"scrollToIndex\"\n    },\n    optional: {\n      components: \"components\",\n      computeItemKey: \"computeItemKey\",\n      context: \"context\",\n      customScrollParent: \"customScrollParent\",\n      data: \"data\",\n      headerFooterTag: \"headerFooterTag\",\n      increaseViewportBy: \"increaseViewportBy\",\n      initialItemCount: \"initialItemCount\",\n      initialTopMostItemIndex: \"initialTopMostItemIndex\",\n      itemClassName: \"itemClassName\",\n      itemContent: \"itemContent\",\n      listClassName: \"listClassName\",\n      logLevel: \"logLevel\",\n      overscan: \"overscan\",\n      restoreStateFrom: \"restoreStateFrom\",\n      scrollerRef: \"scrollerRef\",\n      scrollSeekConfiguration: \"scrollSeekConfiguration\",\n      totalCount: \"totalCount\",\n      useWindowScroll: \"useWindowScroll\"\n    }\n  },\n  Mr\n), _r = /* @__PURE__ */ Ze({ useEmitter: oo, useEmitterValue: et, usePublisher: It }), Gr = /* @__PURE__ */ Xe({ useEmitter: oo, useEmitterValue: et, usePublisher: It });\nfunction Hn(t, e, n) {\n  return e !== \"normal\" && !(e != null && e.endsWith(\"px\")) && n(`${t} was not resolved to pixel value correctly`, e, ht.WARN), e === \"normal\" ? 0 : parseInt(e != null ? e : \"0\", 10);\n}\nconst Yr = Wr;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-virtuoso/dist/index.mjs\n"));

/***/ })

}]);