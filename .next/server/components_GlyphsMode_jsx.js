"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "components_GlyphsMode_jsx";
exports.ids = ["components_GlyphsMode_jsx"];
exports.modules = {

/***/ "./components/GlyphsMode.jsx":
/*!***********************************!*\
  !*** ./components/GlyphsMode.jsx ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_toastify__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-toastify */ \"react-toastify\");\n/* harmony import */ var react_virtuoso__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-virtuoso */ \"react-virtuoso\");\n/* harmony import */ var react_virtuoso__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_virtuoso__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash.debounce */ \"lodash.debounce\");\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash_debounce__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _utils_fontParser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/fontParser */ \"./utils/fontParser.js\");\n/* harmony import */ var _contexts_SettingsContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../contexts/SettingsContext */ \"./contexts/SettingsContext.js\");\n/* harmony import */ var _contexts_FontContext__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../contexts/FontContext */ \"./contexts/FontContext.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([react_toastify__WEBPACK_IMPORTED_MODULE_2__, _utils_fontParser__WEBPACK_IMPORTED_MODULE_5__, _contexts_FontContext__WEBPACK_IMPORTED_MODULE_7__]);\n([react_toastify__WEBPACK_IMPORTED_MODULE_2__, _utils_fontParser__WEBPACK_IMPORTED_MODULE_5__, _contexts_FontContext__WEBPACK_IMPORTED_MODULE_7__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\n\n// Инициализируем глобальный кэш для глифов, чтобы не загружать их повторно\nconst glyphDataCache = new Map();\n/**\n * Компонент для режима отображения глифов шрифта\n * \n * @param {Object} props - Свойства компонента\n * @param {Object} props.selectedFont - Выбранный шрифт\n * @param {string} props.fontFamily - Семейство шрифтов\n * @param {Object} props.glyphDisplayStyle - Стили для отображения глифов\n * @param {boolean} props.isActive - Активен ли режим глифов\n */ function GlyphsMode({ selectedFont, fontFamily, glyphDisplayStyle, isActive = true }) {\n    const { fontSize } = (0,_contexts_SettingsContext__WEBPACK_IMPORTED_MODULE_6__.useSettings)();\n    const { getFontFamily, getVariationSettings } = (0,_contexts_FontContext__WEBPACK_IMPORTED_MODULE_7__.useFontContext)();\n    const { settings, glyphSettings } = (0,_contexts_SettingsContext__WEBPACK_IMPORTED_MODULE_6__.useSettings)();\n    // ОТЛАДКА: Детальные логи для глифов\n    console.log(\"[GlyphsMode] ДЕТАЛЬНАЯ ОТЛАДКА:\", {\n        selectedFont: selectedFont?.name,\n        isVariableFont: selectedFont?.isVariableFont,\n        fontFamily,\n        glyphDisplayStyle,\n        fontSize,\n        selectedFont_id: selectedFont?.id,\n        selectedFont_fontFamily: selectedFont?.fontFamily\n    });\n    // console.log(\"GlyphsMode - Selected Font:\", selectedFont); // Удаляем закомментированный лог\n    // console.log(\"GlyphsMode - Settings:\", settings); // Удаляем закомментированный лог\n    // console.log(\"GlyphsMode - Glyph Settings:\", glyphSettings); // Удаляем закомментированный лог\n    try {\n        // Состояние и ref для загрузки глифов\n        const [glyphsLoaded, setGlyphsLoaded] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n        const [glyphsData, setGlyphsData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n        const [glyphErrors, setGlyphErrors] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]); // <<< Новое состояние для ошибок\n        const isLoadingGlyphs = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n        // Ref для отслеживания текущего запроса, чтобы предотвратить race condition\n        const currentLoadId = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n        // Оборачиваем loadGlyphs в useCallback, чтобы ссылка на функцию была стабильной\n        const loadGlyphsCallback = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async (currentAttemptLoadId, fontToLoad, attemptFontId)=>{\n            // Проверяем, не отменен ли этот запрос (т.е. начался ли новый)\n            if (currentAttemptLoadId !== currentLoadId.current) {\n                return;\n            }\n            try {\n                // Сбрасываем состояние только если этот запрос все еще актуален\n                if (currentAttemptLoadId === currentLoadId.current) {\n                    setGlyphsLoaded(false);\n                    setGlyphsData(null);\n                    setGlyphErrors([]); // <<< Сбрасываем ошибки\n                }\n                // Проверяем кэш\n                if (glyphDataCache.has(attemptFontId)) {\n                    const cachedData = glyphDataCache.get(attemptFontId);\n                    if (currentAttemptLoadId === currentLoadId.current) {\n                        setGlyphsData(cachedData);\n                        setGlyphsLoaded(true);\n                        setGlyphErrors(cachedData.errors || []); // <<< Загружаем ошибки из кэша\n                        isLoadingGlyphs.current = false;\n                        if (!cachedData?.allGlyphs) {\n                            console.warn(\"Cached glyph data is missing 'allGlyphs'.\");\n                        }\n                    }\n                    return;\n                }\n                const data = await (0,_utils_fontParser__WEBPACK_IMPORTED_MODULE_5__.getGlyphDataForFont)(fontToLoad); // Используем переданный fontToLoad\n                // СНОВА проверяем, актуален ли запрос ПЕРЕД установкой состояния\n                if (currentAttemptLoadId !== currentLoadId.current) {\n                    return;\n                }\n                if (!data || !Array.isArray(data.allGlyphs)) {\n                    throw new Error(\"Получены некорректные данные глифов (отсутствует allGlyphs).\");\n                }\n                glyphDataCache.set(attemptFontId, data); // Используем attemptFontId для кэша\n                setGlyphsData(data);\n                setGlyphsLoaded(true);\n                setGlyphErrors(data.errors || []); // <<< Сохраняем ошибки\n                isLoadingGlyphs.current = false;\n            } catch (error) {\n                console.error(\"[GlyphsMode Debounced] Ошибка при загрузке глифов:\", error);\n                react_toastify__WEBPACK_IMPORTED_MODULE_2__.toast.error(`Не удалось загрузить данные глифов: ${error.message}`);\n                if (currentAttemptLoadId === currentLoadId.current) {\n                    setGlyphsData(null);\n                    setGlyphsLoaded(false);\n                    setGlyphErrors([]); // <<< Сбрасываем ошибки при ошибке\n                    isLoadingGlyphs.current = false;\n                }\n            }\n        }, []); // Пустой массив зависимостей для useCallback\n        // Создаем мемоизированную debounced-версию\n        const debouncedLoadGlyphs = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n            return lodash_debounce__WEBPACK_IMPORTED_MODULE_4___default()(loadGlyphsCallback, 200); // Задержка 200ms\n        }, [\n            loadGlyphsCallback\n        ]);\n        // Единый useEffect для загрузки и сброса состояния глифов\n        (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n            if (!isActive) {\n                return;\n            }\n            const fontId = selectedFont?.id;\n            const fontSource = selectedFont?.source;\n            const loadId = Math.random().toString(36).substring(2, 10);\n            currentLoadId.current = loadId;\n            const resetState = (logMessage = \"Resetting glyph state\")=>{\n                // console.log(`[GlyphsMode useEffect] ${logMessage} - Load ID: ${loadId}`); // Удаляем лог\n                setGlyphsLoaded(false);\n                setGlyphsData(null);\n                setGlyphErrors([]); // <<< Сброс ошибок\n                isLoadingGlyphs.current = false; // Сбрасываем флаг загрузки\n            };\n            // --- Проверки перед загрузкой --- \n            if (!selectedFont) {\n                resetState(\"No font selected, resetting state.\");\n                return;\n            }\n            // !!! ДОБАВЛЕНА ПРОВЕРКА на selectedFont.file !!!\n            if (!selectedFont.file || !(selectedFont.file instanceof Blob)) {\n                resetState(`Invalid font file for ${selectedFont.name}, resetting state.`);\n                console.warn(`[GlyphsMode] Attempted to load glyphs for ${selectedFont.name} without a valid file object.`);\n                return;\n            }\n            if (fontSource === \"google\") {\n                if (!glyphsData && !isLoadingGlyphs.current) {\n                    react_toastify__WEBPACK_IMPORTED_MODULE_2__.toast.info(\"Просмотр глифов пока недоступен для Google Fonts.\");\n                }\n                resetState(\"Google Font selected, resetting state.\");\n                return;\n            }\n            // --- Запуск загрузки через debounce ---\n            const isDataLoadedInState = glyphsLoaded && glyphsData && glyphsData.allGlyphs;\n            if (!isDataLoadedInState) {\n                // console.log(`[GlyphsMode useEffect] Data not loaded, calling debouncedLoadGlyphs. Load ID: ${loadId}`); // Удаляем лог\n                // Устанавливаем флаг загрузки ПЕРЕД вызовом debounced функции\n                isLoadingGlyphs.current = true;\n                // Вызываем debounced-функцию, передавая необходимые параметры\n                debouncedLoadGlyphs(loadId, selectedFont, fontId);\n            } else {\n                // console.log(`[GlyphsMode useEffect] Data already loaded or loading. Load ID: ${loadId}`); // Удаляем лог\n                // Если данные уже загружены, но флаг загрузки все еще стоит (маловероятно, но возможно)\n                if (isLoadingGlyphs.current) {\n                    // console.log(`[GlyphsMode useEffect] Resetting isLoadingGlyphs flag. Load ID: ${loadId}`); // Удаляем лог\n                    isLoadingGlyphs.current = false;\n                }\n            }\n            // Функция очистки для useEffect\n            return ()=>{\n                // console.log(`[GlyphsMode useEffect Cleanup] Cancelling debounced call if any. Load ID: ${loadId}`); // Удаляем лог\n                // Отменяем любые отложенные вызовы debouncedLoadGlyphs\n                debouncedLoadGlyphs.cancel();\n            // Сбрасываем currentLoadId, чтобы будущие колбэки от этого useEffect не выполнились\n            // currentLoadId.current = null; // Не сбрасываем здесь, чтобы обработать последний актуальный вызов\n            };\n        }, [\n            selectedFont,\n            isActive,\n            debouncedLoadGlyphs\n        ]); // Добавляем selectedFont и debouncedLoadGlyphs в зависимости\n        // Стили для отображения увеличенного глифа в модальном окне\n        const largeGlyphStyle = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n            // Используем fontSize из useSettings вместо selectedFontSize\n            const baseSize = fontSize || 40; // Используем fontSize, fallback 40\n            const modalFontSize = Math.max(80, Math.min(200, baseSize * 2.5));\n            return {\n                fontFamily: fontFamily ? fontFamily.includes(\"'\") ? fontFamily : `'${fontFamily}'` : \"inherit\",\n                fontSize: `${modalFontSize}px`,\n                lineHeight: 1,\n                ...glyphDisplayStyle || {}\n            };\n        }, [\n            fontFamily,\n            glyphDisplayStyle,\n            fontSize\n        ]);\n        // Функция копирования символа в буфер обмена (остается)\n        const copyToClipboard = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((text, type = \"Символ\")=>{\n            if (!text) {\n                return;\n            }\n            navigator.clipboard.writeText(text).then(()=>{\n                react_toastify__WEBPACK_IMPORTED_MODULE_2__.toast.success(`${type} \"${text}\" скопирован`);\n            }).catch((err)=>{\n                console.error(\"Не удалось скопировать: \", err);\n                react_toastify__WEBPACK_IMPORTED_MODULE_2__.toast.error(`Не удалось скопировать ${type.toLowerCase()}`);\n            });\n        }, []);\n        // --- Логика для отображения ВСЕХ глифов ---\n        // Обновляем useMemo для использования glyphsData.allGlyphs\n        const displayableGlyphs = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n            // Используем allGlyphs БЕЗ дополнительной фильтрации .notdef\n            return glyphsData?.allGlyphs || [];\n        }, [\n            glyphsData\n        ]);\n        // Хелперы для получения имени и Unicode\n        // Обновляем для использования glyphsData.names и glyphsData.unicodes\n        const getGlyphName = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((glyph)=>{\n            // Сначала пробуем из карты names, потом из самого объекта glyph\n            return glyphsData?.names?.[glyph?.id] || glyph?.name || `Glyph ${glyph?.id}`;\n        }, [\n            glyphsData\n        ]);\n        const getGlyphUnicode = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((glyph)=>{\n            // Сначала пробуем из карты unicodes, потом из самого объекта glyph\n            const unicodeValue = glyphsData?.unicodes?.[glyph?.id];\n            if (unicodeValue) return unicodeValue;\n            // Запасной вариант - форматируем из glyph.unicode\n            if (glyph?.unicode) {\n                return `U+${glyph.unicode.toString(16).toUpperCase().padStart(4, \"0\")}`;\n            }\n            return \"\"; // Возвращаем пустую строку, если Unicode нет\n        }, [\n            glyphsData\n        ]);\n        // Состояние для модального окна (остается)\n        const [selectedGlyph, setSelectedGlyph] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n        // Условие отображения загрузчика\n        if (isLoadingGlyphs.current) {\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"p-8 text-center text-blue-600\",\n                children: \"Загрузка данных глифов...\"\n            }, void 0, false, {\n                fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                lineNumber: 249,\n                columnNumber: 15\n            }, this);\n        }\n        // Сообщение, если шрифт - Google Font (проверяется после isLoading)\n        if (selectedFont?.source === \"google\") {\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"p-8 text-center text-gray-500\",\n                children: \"Просмотр глифов недоступен для шрифтов Google.\"\n            }, void 0, false, {\n                fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                lineNumber: 254,\n                columnNumber: 16\n            }, this);\n        }\n        // Условие отображения ошибки или отсутствия данных (после попытки загрузки и не Google Font)\n        if (!glyphsLoaded || !glyphsData || displayableGlyphs.length === 0) {\n            // Не показываем ошибку, если isLoadingGlyphs все еще true\n            if (isLoadingGlyphs.current) return null;\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"p-8 text-center text-gray-500\",\n                children: [\n                    'Нет данных о глифах для шрифта \"',\n                    selectedFont?.name || \"Неизвестный\",\n                    '\" или не удалось их загрузить. Проверьте консоль на наличие ошибок.'\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                lineNumber: 262,\n                columnNumber: 11\n            }, this);\n        }\n        // --- Отображение информации об ошибках --- */\n        if (glyphErrors.length > 0) {\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mb-4 p-3 bg-yellow-100 border border-yellow-300 text-yellow-800 text-xs rounded\",\n                children: [\n                    \"При обработке шрифта возникло \",\n                    glyphErrors.length,\n                    \" ошибок. Некоторые глифы могут отображаться некорректно.\"\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                lineNumber: 271,\n                columnNumber: 7\n            }, this);\n        }\n        // Основной рендер (остается почти без изменений, но использует обновленные хелперы)\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"p-8\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    className: \"text-sm text-gray-600 mb-2\",\n                    children: [\n                        \"Найдено \",\n                        displayableGlyphs.length,\n                        \" глифов.\"\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                    lineNumber: 282,\n                    columnNumber: 9\n                }, this),\n                glyphErrors.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"mb-4 p-3 bg-yellow-100 border border-yellow-300 text-yellow-800 text-xs rounded\",\n                    children: [\n                        \"При обработке шрифта возникло \",\n                        glyphErrors.length,\n                        \" ошибок. Некоторые глифы могут отображаться некорректно.\"\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                    lineNumber: 286,\n                    columnNumber: 11\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_virtuoso__WEBPACK_IMPORTED_MODULE_3__.VirtuosoGrid, {\n                    style: {\n                        height: \"calc(100vh - 120px)\"\n                    },\n                    totalCount: displayableGlyphs.length,\n                    components: {\n                        // Компонент, к которому будут применены стили сетки\n                        List: /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().forwardRef(({ style, children, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                ref: ref,\n                                ...props,\n                                style: style,\n                                className: \"grid grid-cols-2 sm:grid-cols-4 md:grid-cols-6 lg:grid-cols-8 xl:grid-cols-10 gap-3 mt-6\",\n                                children: children\n                            }, void 0, false, {\n                                fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                                lineNumber: 301,\n                                columnNumber: 15\n                            }, void 0))\n                    },\n                    itemContent: (index)=>{\n                        // Получаем глиф по индексу\n                        const glyph = displayableGlyphs[index];\n                        if (!glyph) return null; // На всякий случай\n                        // --- Обновленная логика получения символа (остается та же) ---\n                        let char = null;\n                        let isPrintable = false;\n                        if (glyph.unicode) {\n                            try {\n                                const potentialChar = String.fromCodePoint(glyph.unicode);\n                                if (potentialChar && potentialChar.trim() !== \"\" && !/[\\p{C}]/u.test(potentialChar)) {\n                                    char = potentialChar;\n                                    isPrintable = true;\n                                }\n                            } catch (e) {}\n                        }\n                        if (!isPrintable && glyph.unicodes && glyph.unicodes.length > 0) {\n                            for (const codePoint of glyph.unicodes){\n                                try {\n                                    const potentialChar = String.fromCodePoint(codePoint);\n                                    if (potentialChar && potentialChar.trim() !== \"\" && !/[\\p{C}]/u.test(potentialChar)) {\n                                        char = potentialChar;\n                                        isPrintable = true;\n                                        break;\n                                    }\n                                } catch (e) {}\n                            }\n                        }\n                        // --- Конец обновленной логики ---\n                        const glyphName = getGlyphName(glyph);\n                        const glyphUnicodeStr = getGlyphUnicode(glyph);\n                        // Возвращаем JSX для одного глифа (тот же, что был внутри .map)\n                        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"bg-white h-full rounded-md overflow-hidden border border-gray-200 hover:border-blue-400 hover:shadow-md transition-all cursor-pointer flex flex-col\",\n                            onClick: ()=>setSelectedGlyph(glyph),\n                            title: `Нажмите, чтобы увидеть детали глифа ${glyphName}`,\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"text-center p-4 flex-grow flex items-center justify-center\",\n                                    style: (()=>{\n                                        const finalStyle = {\n                                            fontSize: `${fontSize}px`,\n                                            fontFamily: fontFamily || \"inherit\",\n                                            ...glyphDisplayStyle\n                                        };\n                                        // Логируем стили только для первого глифа (чтобы не спамить)\n                                        if (index === 0) {\n                                            console.log(\"[GlyphsMode] СТИЛИ ГЛИФА #0:\", {\n                                                fontSize: finalStyle.fontSize,\n                                                fontFamily: finalStyle.fontFamily,\n                                                fontVariationSettings: finalStyle.fontVariationSettings,\n                                                fontWeight: finalStyle.fontWeight,\n                                                fontStyle: finalStyle.fontStyle,\n                                                fullStyle: finalStyle\n                                            });\n                                        }\n                                        return finalStyle;\n                                    })(),\n                                    children: isPrintable ? char : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-gray-400 text-sm\",\n                                        children: \"(no char)\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                                        lineNumber: 381,\n                                        columnNumber: 41\n                                    }, void 0)\n                                }, void 0, false, {\n                                    fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                                    lineNumber: 357,\n                                    columnNumber: 17\n                                }, void 0),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"bg-gray-50 p-2 text-[10px]\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"text-gray-700 text-center truncate w-full font-medium\",\n                                            title: glyphName,\n                                            children: glyphName\n                                        }, void 0, false, {\n                                            fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                                            lineNumber: 384,\n                                            columnNumber: 19\n                                        }, void 0),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"text-gray-500 text-center\",\n                                            children: glyphUnicodeStr || \"-\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                                            lineNumber: 387,\n                                            columnNumber: 19\n                                        }, void 0),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"flex justify-center gap-1 mt-1\",\n                                            children: [\n                                                isPrintable && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    onClick: (e)=>{\n                                                        e.stopPropagation();\n                                                        copyToClipboard(char, \"Символ\");\n                                                    },\n                                                    className: \"text-[8px] px-1 py-0.5 bg-blue-100 hover:bg-blue-200 text-blue-700 rounded\",\n                                                    title: \"Копировать символ\",\n                                                    children: \"Char\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                                                    lineNumber: 392,\n                                                    columnNumber: 24\n                                                }, void 0),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    onClick: (e)=>{\n                                                        e.stopPropagation();\n                                                        copyToClipboard(glyphName, \"Имя\");\n                                                    },\n                                                    className: \"text-[8px] px-1 py-0.5 bg-gray-100 hover:bg-gray-200 text-gray-700 rounded\",\n                                                    title: \"Копировать имя\",\n                                                    children: \"Name\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                                                    lineNumber: 400,\n                                                    columnNumber: 21\n                                                }, void 0),\n                                                glyphUnicodeStr && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    onClick: (e)=>{\n                                                        e.stopPropagation();\n                                                        copyToClipboard(glyphUnicodeStr, \"Unicode\");\n                                                    },\n                                                    className: \"text-[8px] px-1 py-0.5 bg-gray-100 hover:bg-gray-200 text-gray-700 rounded\",\n                                                    title: \"Копировать Unicode\",\n                                                    children: \"Unicode\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                                                    lineNumber: 408,\n                                                    columnNumber: 24\n                                                }, void 0)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                                            lineNumber: 390,\n                                            columnNumber: 19\n                                        }, void 0)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                                    lineNumber: 383,\n                                    columnNumber: 17\n                                }, void 0)\n                            ]\n                        }, glyph.id, true, {\n                            fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                            lineNumber: 351,\n                            columnNumber: 15\n                        }, void 0);\n                    }\n                }, void 0, false, {\n                    fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                    lineNumber: 295,\n                    columnNumber: 9\n                }, this),\n                selectedGlyph && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center z-50 p-4\",\n                    onClick: ()=>setSelectedGlyph(null),\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"bg-white p-6 sm:p-8 rounded-lg shadow-xl max-w-md w-full relative\",\n                        onClick: (e)=>e.stopPropagation(),\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>setSelectedGlyph(null),\n                                className: \"absolute top-2 right-3 text-gray-400 hover:text-gray-700 text-3xl font-light leading-none\",\n                                \"aria-label\": \"Закрыть\",\n                                children: \"\\xd7\"\n                            }, void 0, false, {\n                                fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                                lineNumber: 434,\n                                columnNumber: 15\n                            }, this),\n                            (()=>{\n                                const name = getGlyphName(selectedGlyph);\n                                const unicodeStr = getGlyphUnicode(selectedGlyph);\n                                const advanceWidth = glyphsData?.advanceWidths?.[selectedGlyph.id];\n                                // --- Обновленная логика получения символа для модального окна ---\n                                let char = null;\n                                let isPrintable = false;\n                                // 1. Пробуем основной unicode\n                                if (selectedGlyph.unicode) {\n                                    try {\n                                        const potentialChar = String.fromCodePoint(selectedGlyph.unicode);\n                                        if (potentialChar && potentialChar.trim() !== \"\" && !/[\\p{C}]/u.test(potentialChar)) {\n                                            char = potentialChar;\n                                            isPrintable = true;\n                                        }\n                                    } catch (e) {}\n                                }\n                                // 2. Если не получилось, пробуем массив unicodes\n                                if (!isPrintable && selectedGlyph.unicodes && selectedGlyph.unicodes.length > 0) {\n                                    for (const codePoint of selectedGlyph.unicodes){\n                                        try {\n                                            const potentialChar = String.fromCodePoint(codePoint);\n                                            if (potentialChar && potentialChar.trim() !== \"\" && !/[\\p{C}]/u.test(potentialChar)) {\n                                                char = potentialChar;\n                                                isPrintable = true;\n                                                break;\n                                            }\n                                        } catch (e) {}\n                                    }\n                                }\n                                // --- Конец обновленной логики ---\n                                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                            className: \"text-xl font-semibold mb-4 text-gray-800 truncate\",\n                                            title: name,\n                                            children: [\n                                                \"Детали глифа: \",\n                                                name\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                                            lineNumber: 479,\n                                            columnNumber: 27\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"text-center mb-6 p-4 bg-gray-50 rounded\",\n                                            style: largeGlyphStyle,\n                                            children: isPrintable ? char : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                className: \"text-gray-400 text-xl\",\n                                                children: \"(no char)\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                                                lineNumber: 483,\n                                                columnNumber: 53\n                                            }, this)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                                            lineNumber: 482,\n                                            columnNumber: 27\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"space-y-2 text-sm text-gray-700\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                                                            children: \"Имя:\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                                                            lineNumber: 486,\n                                                            columnNumber: 34\n                                                        }, this),\n                                                        \" \",\n                                                        name\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                                                    lineNumber: 486,\n                                                    columnNumber: 31\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                                                            children: \"Unicode:\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                                                            lineNumber: 487,\n                                                            columnNumber: 34\n                                                        }, this),\n                                                        \" \",\n                                                        unicodeStr || \"N/A\"\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                                                    lineNumber: 487,\n                                                    columnNumber: 31\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                                                            children: \"ID (индекс):\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                                                            lineNumber: 488,\n                                                            columnNumber: 34\n                                                        }, this),\n                                                        \" \",\n                                                        selectedGlyph.id\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                                                    lineNumber: 488,\n                                                    columnNumber: 31\n                                                }, this),\n                                                advanceWidth !== undefined && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                                                            children: \"Ширина (advanceWidth):\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                                                            lineNumber: 490,\n                                                            columnNumber: 38\n                                                        }, this),\n                                                        \" \",\n                                                        advanceWidth\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                                                    lineNumber: 490,\n                                                    columnNumber: 35\n                                                }, this),\n                                                selectedGlyph.unicodes && selectedGlyph.unicodes.length > 1 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                                                            children: \"Другие Unicode:\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                                                            lineNumber: 493,\n                                                            columnNumber: 38\n                                                        }, this),\n                                                        \" \",\n                                                        selectedGlyph.unicodes.filter((u)=>u !== selectedGlyph.unicode).map((u)=>`U+${u.toString(16).toUpperCase().padStart(4, \"0\")}`).join(\", \")\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                                                    lineNumber: 493,\n                                                    columnNumber: 35\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                                            lineNumber: 485,\n                                            columnNumber: 27\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"mt-6 flex flex-wrap justify-end gap-2\",\n                                            children: [\n                                                isPrintable && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    onClick: ()=>copyToClipboard(char, \"Символ\"),\n                                                    className: \"px-3 py-1.5 bg-blue-500 text-white rounded hover:bg-blue-600 text-sm shadow-sm\",\n                                                    children: \"Копировать символ\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                                                    lineNumber: 498,\n                                                    columnNumber: 35\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    onClick: ()=>copyToClipboard(name, \"Имя\"),\n                                                    className: \"px-3 py-1.5 bg-gray-200 text-gray-800 rounded hover:bg-gray-300 text-sm shadow-sm\",\n                                                    children: \"Копировать имя\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                                                    lineNumber: 500,\n                                                    columnNumber: 31\n                                                }, this),\n                                                unicodeStr && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    onClick: ()=>copyToClipboard(unicodeStr, \"Unicode\"),\n                                                    className: \"px-3 py-1.5 bg-gray-200 text-gray-800 rounded hover:bg-gray-300 text-sm shadow-sm\",\n                                                    children: \"Копировать Unicode\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                                                    lineNumber: 502,\n                                                    columnNumber: 35\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                                            lineNumber: 496,\n                                            columnNumber: 27\n                                        }, this)\n                                    ]\n                                }, void 0, true);\n                            })()\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                        lineNumber: 430,\n                        columnNumber: 13\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                    lineNumber: 426,\n                    columnNumber: 11\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n            lineNumber: 281,\n            columnNumber: 7\n        }, this);\n    } catch (error) {\n        console.error(\"[GlyphsMode] Render error caught:\", error);\n        // Возвращаем простой fallback UI при ошибке рендера\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"p-8 text-center text-red-600 bg-red-50 border border-red-200 rounded\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    className: \"font-bold mb-2\",\n                    children: \"Ошибка рендеринга в компоненте GlyphsMode.\"\n                }, void 0, false, {\n                    fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                    lineNumber: 518,\n                    columnNumber: 13\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    className: \"text-sm\",\n                    children: \"Пожалуйста, проверьте консоль для деталей.\"\n                }, void 0, false, {\n                    fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n                    lineNumber: 519,\n                    columnNumber: 13\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/igormocalov/Desktop/Font/components/GlyphsMode.jsx\",\n            lineNumber: 517,\n            columnNumber: 9\n        }, this);\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (GlyphsMode);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/GlyphsMode.jsx\n");

/***/ })

};
;